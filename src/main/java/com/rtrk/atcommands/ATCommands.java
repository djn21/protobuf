// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commands.proto

package com.rtrk.atcommands;

public final class ATCommands {
  private ATCommands() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.rtrk.protobuf.FTPServiceStatus}
   */
  public enum FTPServiceStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>IDLE = 0;</code>
     */
    IDLE(0),
    /**
     * <code>OPENING = 1;</code>
     */
    OPENING(1),
    /**
     * <code>OPENED = 2;</code>
     */
    OPENED(2),
    /**
     * <code>WORKING = 3;</code>
     */
    WORKING(3),
    /**
     * <code>TRANSFER = 4;</code>
     */
    TRANSFER(4),
    /**
     * <code>CLOSING = 5;</code>
     */
    CLOSING(5),
    /**
     * <code>CLOSED = 6;</code>
     */
    CLOSED(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>IDLE = 0;</code>
     */
    public static final int IDLE_VALUE = 0;
    /**
     * <code>OPENING = 1;</code>
     */
    public static final int OPENING_VALUE = 1;
    /**
     * <code>OPENED = 2;</code>
     */
    public static final int OPENED_VALUE = 2;
    /**
     * <code>WORKING = 3;</code>
     */
    public static final int WORKING_VALUE = 3;
    /**
     * <code>TRANSFER = 4;</code>
     */
    public static final int TRANSFER_VALUE = 4;
    /**
     * <code>CLOSING = 5;</code>
     */
    public static final int CLOSING_VALUE = 5;
    /**
     * <code>CLOSED = 6;</code>
     */
    public static final int CLOSED_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FTPServiceStatus valueOf(int value) {
      return forNumber(value);
    }

    public static FTPServiceStatus forNumber(int value) {
      switch (value) {
        case 0: return IDLE;
        case 1: return OPENING;
        case 2: return OPENED;
        case 3: return WORKING;
        case 4: return TRANSFER;
        case 5: return CLOSING;
        case 6: return CLOSED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FTPServiceStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FTPServiceStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FTPServiceStatus>() {
            public FTPServiceStatus findValueByNumber(int number) {
              return FTPServiceStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.getDescriptor().getEnumTypes().get(0);
    }

    private static final FTPServiceStatus[] VALUES = values();

    public static FTPServiceStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FTPServiceStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.rtrk.protobuf.FTPServiceStatus)
  }

  /**
   * Protobuf enum {@code com.rtrk.protobuf.FTPMessageType}
   */
  public enum FTPMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OPEN_AN_FTP_SERVICE_TO_THE_GIVEN_FTP_SERVER = 0;</code>
     */
    OPEN_AN_FTP_SERVICE_TO_THE_GIVEN_FTP_SERVER(0),
    /**
     * <code>CLOSE_THE_FTP_SERVICE = 1;</code>
     */
    CLOSE_THE_FTP_SERVICE(1),
    /**
     * <code>UPLOAD_A_FILE_TO_THE_FTP_SERVER = 2;</code>
     */
    UPLOAD_A_FILE_TO_THE_FTP_SERVER(2),
    /**
     * <code>SET_THE_PATH_IN_THE_FTP_SERVER_TO_UPLOAD_OR_DOWNLOAD_FILE = 3;</code>
     */
    SET_THE_PATH_IN_THE_FTP_SERVER_TO_UPLOAD_OR_DOWNLOAD_FILE(3),
    /**
     * <code>SET_THE_USER_NAME_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE = 4;</code>
     */
    SET_THE_USER_NAME_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE(4),
    /**
     * <code>SET_THE_PASSWORD_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE = 5;</code>
     */
    SET_THE_PASSWORD_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE(5),
    /**
     * <code>SET_SOME_CONFIGURABLE_PARAMETERS_FOR_THE_FTP_SERVICE = 6;</code>
     */
    SET_SOME_CONFIGURABLE_PARAMETERS_FOR_THE_FTP_SERVICE(6),
    /**
     * <code>QUERY_STATUS_OF_FTP_SERVICE = 7;</code>
     */
    QUERY_STATUS_OF_FTP_SERVICE(7),
    /**
     * <code>QUERY_THE_REAL_SIZE_TRANSFERED_IN_THE_LATEST_TRANSFER = 8;</code>
     */
    QUERY_THE_REAL_SIZE_TRANSFERED_IN_THE_LATEST_TRANSFER(8),
    /**
     * <code>RENAME_FILE_OR_FOLDER_NAME_ON_THE_FTP_SERVER = 9;</code>
     */
    RENAME_FILE_OR_FOLDER_NAME_ON_THE_FTP_SERVER(9),
    /**
     * <code>QUERY_THE_SIZE_OF_APPOINTED_FILE_ON_THE_FTP_SERVER = 10;</code>
     */
    QUERY_THE_SIZE_OF_APPOINTED_FILE_ON_THE_FTP_SERVER(10),
    /**
     * <code>DELETE_THE_APPOINTED_FILE_ON_THE_FTP_SERVER = 11;</code>
     */
    DELETE_THE_APPOINTED_FILE_ON_THE_FTP_SERVER(11),
    /**
     * <code>ESTABLISH_A_NEW_FILEFOLDER_ON_THE_FTP_SERVER = 12;</code>
     */
    ESTABLISH_A_NEW_FILEFOLDER_ON_THE_FTP_SERVER(12),
    /**
     * <code>REMOVE_A_FILEFOLDER_ON_THE_FTP_SERVER = 13;</code>
     */
    REMOVE_A_FILEFOLDER_ON_THE_FTP_SERVER(13),
    /**
     * <code>LIST_CONTENTS_OF_DIRECTORY_OR_FILE_INFORMATION_ON_THE_FTP_SERVER = 14;</code>
     */
    LIST_CONTENTS_OF_DIRECTORY_OR_FILE_INFORMATION_ON_THE_FTP_SERVER(14),
    /**
     * <code>LIST_FILE_NAMES_IN_THE_GIVEN_DIRECTORY_ON_THE_FTP_SERVER = 15;</code>
     */
    LIST_FILE_NAMES_IN_THE_GIVEN_DIRECTORY_ON_THE_FTP_SERVER(15),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OPEN_AN_FTP_SERVICE_TO_THE_GIVEN_FTP_SERVER = 0;</code>
     */
    public static final int OPEN_AN_FTP_SERVICE_TO_THE_GIVEN_FTP_SERVER_VALUE = 0;
    /**
     * <code>CLOSE_THE_FTP_SERVICE = 1;</code>
     */
    public static final int CLOSE_THE_FTP_SERVICE_VALUE = 1;
    /**
     * <code>UPLOAD_A_FILE_TO_THE_FTP_SERVER = 2;</code>
     */
    public static final int UPLOAD_A_FILE_TO_THE_FTP_SERVER_VALUE = 2;
    /**
     * <code>SET_THE_PATH_IN_THE_FTP_SERVER_TO_UPLOAD_OR_DOWNLOAD_FILE = 3;</code>
     */
    public static final int SET_THE_PATH_IN_THE_FTP_SERVER_TO_UPLOAD_OR_DOWNLOAD_FILE_VALUE = 3;
    /**
     * <code>SET_THE_USER_NAME_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE = 4;</code>
     */
    public static final int SET_THE_USER_NAME_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE_VALUE = 4;
    /**
     * <code>SET_THE_PASSWORD_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE = 5;</code>
     */
    public static final int SET_THE_PASSWORD_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE_VALUE = 5;
    /**
     * <code>SET_SOME_CONFIGURABLE_PARAMETERS_FOR_THE_FTP_SERVICE = 6;</code>
     */
    public static final int SET_SOME_CONFIGURABLE_PARAMETERS_FOR_THE_FTP_SERVICE_VALUE = 6;
    /**
     * <code>QUERY_STATUS_OF_FTP_SERVICE = 7;</code>
     */
    public static final int QUERY_STATUS_OF_FTP_SERVICE_VALUE = 7;
    /**
     * <code>QUERY_THE_REAL_SIZE_TRANSFERED_IN_THE_LATEST_TRANSFER = 8;</code>
     */
    public static final int QUERY_THE_REAL_SIZE_TRANSFERED_IN_THE_LATEST_TRANSFER_VALUE = 8;
    /**
     * <code>RENAME_FILE_OR_FOLDER_NAME_ON_THE_FTP_SERVER = 9;</code>
     */
    public static final int RENAME_FILE_OR_FOLDER_NAME_ON_THE_FTP_SERVER_VALUE = 9;
    /**
     * <code>QUERY_THE_SIZE_OF_APPOINTED_FILE_ON_THE_FTP_SERVER = 10;</code>
     */
    public static final int QUERY_THE_SIZE_OF_APPOINTED_FILE_ON_THE_FTP_SERVER_VALUE = 10;
    /**
     * <code>DELETE_THE_APPOINTED_FILE_ON_THE_FTP_SERVER = 11;</code>
     */
    public static final int DELETE_THE_APPOINTED_FILE_ON_THE_FTP_SERVER_VALUE = 11;
    /**
     * <code>ESTABLISH_A_NEW_FILEFOLDER_ON_THE_FTP_SERVER = 12;</code>
     */
    public static final int ESTABLISH_A_NEW_FILEFOLDER_ON_THE_FTP_SERVER_VALUE = 12;
    /**
     * <code>REMOVE_A_FILEFOLDER_ON_THE_FTP_SERVER = 13;</code>
     */
    public static final int REMOVE_A_FILEFOLDER_ON_THE_FTP_SERVER_VALUE = 13;
    /**
     * <code>LIST_CONTENTS_OF_DIRECTORY_OR_FILE_INFORMATION_ON_THE_FTP_SERVER = 14;</code>
     */
    public static final int LIST_CONTENTS_OF_DIRECTORY_OR_FILE_INFORMATION_ON_THE_FTP_SERVER_VALUE = 14;
    /**
     * <code>LIST_FILE_NAMES_IN_THE_GIVEN_DIRECTORY_ON_THE_FTP_SERVER = 15;</code>
     */
    public static final int LIST_FILE_NAMES_IN_THE_GIVEN_DIRECTORY_ON_THE_FTP_SERVER_VALUE = 15;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FTPMessageType valueOf(int value) {
      return forNumber(value);
    }

    public static FTPMessageType forNumber(int value) {
      switch (value) {
        case 0: return OPEN_AN_FTP_SERVICE_TO_THE_GIVEN_FTP_SERVER;
        case 1: return CLOSE_THE_FTP_SERVICE;
        case 2: return UPLOAD_A_FILE_TO_THE_FTP_SERVER;
        case 3: return SET_THE_PATH_IN_THE_FTP_SERVER_TO_UPLOAD_OR_DOWNLOAD_FILE;
        case 4: return SET_THE_USER_NAME_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE;
        case 5: return SET_THE_PASSWORD_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE;
        case 6: return SET_SOME_CONFIGURABLE_PARAMETERS_FOR_THE_FTP_SERVICE;
        case 7: return QUERY_STATUS_OF_FTP_SERVICE;
        case 8: return QUERY_THE_REAL_SIZE_TRANSFERED_IN_THE_LATEST_TRANSFER;
        case 9: return RENAME_FILE_OR_FOLDER_NAME_ON_THE_FTP_SERVER;
        case 10: return QUERY_THE_SIZE_OF_APPOINTED_FILE_ON_THE_FTP_SERVER;
        case 11: return DELETE_THE_APPOINTED_FILE_ON_THE_FTP_SERVER;
        case 12: return ESTABLISH_A_NEW_FILEFOLDER_ON_THE_FTP_SERVER;
        case 13: return REMOVE_A_FILEFOLDER_ON_THE_FTP_SERVER;
        case 14: return LIST_CONTENTS_OF_DIRECTORY_OR_FILE_INFORMATION_ON_THE_FTP_SERVER;
        case 15: return LIST_FILE_NAMES_IN_THE_GIVEN_DIRECTORY_ON_THE_FTP_SERVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FTPMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FTPMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FTPMessageType>() {
            public FTPMessageType findValueByNumber(int number) {
              return FTPMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.getDescriptor().getEnumTypes().get(1);
    }

    private static final FTPMessageType[] VALUES = values();

    public static FTPMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FTPMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.rtrk.protobuf.FTPMessageType)
  }

  /**
   * Protobuf enum {@code com.rtrk.protobuf.FileMessageType}
   */
  public enum FileMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GET_STORAGE_DATE_SIZE = 0;</code>
     */
    GET_STORAGE_DATE_SIZE(0),
    /**
     * <code>LIST_FILES = 1;</code>
     */
    LIST_FILES(1),
    /**
     * <code>UPLOAD_FILE_TO_STORAGE = 2;</code>
     */
    UPLOAD_FILE_TO_STORAGE(2),
    /**
     * <code>DOWNLOAD_FILE_FROM_STORAGE = 3;</code>
     */
    DOWNLOAD_FILE_FROM_STORAGE(3),
    /**
     * <code>DELETE_FILE_IN_STORAGE = 4;</code>
     */
    DELETE_FILE_IN_STORAGE(4),
    /**
     * <code>MOVE_FILE = 5;</code>
     */
    MOVE_FILE(5),
    /**
     * <code>OPEN_FILE = 6;</code>
     */
    OPEN_FILE(6),
    /**
     * <code>READ_FILE = 7;</code>
     */
    READ_FILE(7),
    /**
     * <code>WRITE_FILE = 8;</code>
     */
    WRITE_FILE(8),
    /**
     * <code>SEEK_FILE = 9;</code>
     */
    SEEK_FILE(9),
    /**
     * <code>CLOSE_FILE = 10;</code>
     */
    CLOSE_FILE(10),
    /**
     * <code>GET_OFFSET_OF_THE_FILE_POINTER = 11;</code>
     */
    GET_OFFSET_OF_THE_FILE_POINTER(11),
    /**
     * <code>FORCE_TO_WRITE_DATA_REMAINING_IN_THE_FILE_BUFFER = 12;</code>
     */
    FORCE_TO_WRITE_DATA_REMAINING_IN_THE_FILE_BUFFER(12),
    /**
     * <code>TRUNCATE_THE_SPECIFIED_FILE_FROM_FILE_POINTER = 13;</code>
     */
    TRUNCATE_THE_SPECIFIED_FILE_FROM_FILE_POINTER(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>GET_STORAGE_DATE_SIZE = 0;</code>
     */
    public static final int GET_STORAGE_DATE_SIZE_VALUE = 0;
    /**
     * <code>LIST_FILES = 1;</code>
     */
    public static final int LIST_FILES_VALUE = 1;
    /**
     * <code>UPLOAD_FILE_TO_STORAGE = 2;</code>
     */
    public static final int UPLOAD_FILE_TO_STORAGE_VALUE = 2;
    /**
     * <code>DOWNLOAD_FILE_FROM_STORAGE = 3;</code>
     */
    public static final int DOWNLOAD_FILE_FROM_STORAGE_VALUE = 3;
    /**
     * <code>DELETE_FILE_IN_STORAGE = 4;</code>
     */
    public static final int DELETE_FILE_IN_STORAGE_VALUE = 4;
    /**
     * <code>MOVE_FILE = 5;</code>
     */
    public static final int MOVE_FILE_VALUE = 5;
    /**
     * <code>OPEN_FILE = 6;</code>
     */
    public static final int OPEN_FILE_VALUE = 6;
    /**
     * <code>READ_FILE = 7;</code>
     */
    public static final int READ_FILE_VALUE = 7;
    /**
     * <code>WRITE_FILE = 8;</code>
     */
    public static final int WRITE_FILE_VALUE = 8;
    /**
     * <code>SEEK_FILE = 9;</code>
     */
    public static final int SEEK_FILE_VALUE = 9;
    /**
     * <code>CLOSE_FILE = 10;</code>
     */
    public static final int CLOSE_FILE_VALUE = 10;
    /**
     * <code>GET_OFFSET_OF_THE_FILE_POINTER = 11;</code>
     */
    public static final int GET_OFFSET_OF_THE_FILE_POINTER_VALUE = 11;
    /**
     * <code>FORCE_TO_WRITE_DATA_REMAINING_IN_THE_FILE_BUFFER = 12;</code>
     */
    public static final int FORCE_TO_WRITE_DATA_REMAINING_IN_THE_FILE_BUFFER_VALUE = 12;
    /**
     * <code>TRUNCATE_THE_SPECIFIED_FILE_FROM_FILE_POINTER = 13;</code>
     */
    public static final int TRUNCATE_THE_SPECIFIED_FILE_FROM_FILE_POINTER_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FileMessageType valueOf(int value) {
      return forNumber(value);
    }

    public static FileMessageType forNumber(int value) {
      switch (value) {
        case 0: return GET_STORAGE_DATE_SIZE;
        case 1: return LIST_FILES;
        case 2: return UPLOAD_FILE_TO_STORAGE;
        case 3: return DOWNLOAD_FILE_FROM_STORAGE;
        case 4: return DELETE_FILE_IN_STORAGE;
        case 5: return MOVE_FILE;
        case 6: return OPEN_FILE;
        case 7: return READ_FILE;
        case 8: return WRITE_FILE;
        case 9: return SEEK_FILE;
        case 10: return CLOSE_FILE;
        case 11: return GET_OFFSET_OF_THE_FILE_POINTER;
        case 12: return FORCE_TO_WRITE_DATA_REMAINING_IN_THE_FILE_BUFFER;
        case 13: return TRUNCATE_THE_SPECIFIED_FILE_FROM_FILE_POINTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FileMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FileMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FileMessageType>() {
            public FileMessageType findValueByNumber(int number) {
              return FileMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.getDescriptor().getEnumTypes().get(2);
    }

    private static final FileMessageType[] VALUES = values();

    public static FileMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FileMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.rtrk.protobuf.FileMessageType)
  }

  /**
   * Protobuf enum {@code com.rtrk.protobuf.HTTPMessageType}
   */
  public enum HTTPMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SET_HTTP_SERVER_URL = 0;</code>
     */
    SET_HTTP_SERVER_URL(0),
    /**
     * <code>SEND_HTTP_GET_REQUEST = 1;</code>
     */
    SEND_HTTP_GET_REQUEST(1),
    /**
     * <code>READ_HTTP_SERVER_RESPONSE = 2;</code>
     */
    READ_HTTP_SERVER_RESPONSE(2),
    /**
     * <code>SEND_HTTP_POST_REQUEST = 3;</code>
     */
    SEND_HTTP_POST_REQUEST(3),
    /**
     * <code>DOWNLODA_FILE_FROM_HTTP_SERVER = 4;</code>
     */
    DOWNLODA_FILE_FROM_HTTP_SERVER(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SET_HTTP_SERVER_URL = 0;</code>
     */
    public static final int SET_HTTP_SERVER_URL_VALUE = 0;
    /**
     * <code>SEND_HTTP_GET_REQUEST = 1;</code>
     */
    public static final int SEND_HTTP_GET_REQUEST_VALUE = 1;
    /**
     * <code>READ_HTTP_SERVER_RESPONSE = 2;</code>
     */
    public static final int READ_HTTP_SERVER_RESPONSE_VALUE = 2;
    /**
     * <code>SEND_HTTP_POST_REQUEST = 3;</code>
     */
    public static final int SEND_HTTP_POST_REQUEST_VALUE = 3;
    /**
     * <code>DOWNLODA_FILE_FROM_HTTP_SERVER = 4;</code>
     */
    public static final int DOWNLODA_FILE_FROM_HTTP_SERVER_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HTTPMessageType valueOf(int value) {
      return forNumber(value);
    }

    public static HTTPMessageType forNumber(int value) {
      switch (value) {
        case 0: return SET_HTTP_SERVER_URL;
        case 1: return SEND_HTTP_GET_REQUEST;
        case 2: return READ_HTTP_SERVER_RESPONSE;
        case 3: return SEND_HTTP_POST_REQUEST;
        case 4: return DOWNLODA_FILE_FROM_HTTP_SERVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HTTPMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HTTPMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HTTPMessageType>() {
            public HTTPMessageType findValueByNumber(int number) {
              return HTTPMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.getDescriptor().getEnumTypes().get(3);
    }

    private static final HTTPMessageType[] VALUES = values();

    public static HTTPMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HTTPMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.rtrk.protobuf.HTTPMessageType)
  }

  /**
   * Protobuf enum {@code com.rtrk.protobuf.Error}
   */
  public enum Error
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OK = 0;</code>
     */
    OK(0),
    /**
     * <code>UNKNOW_ERROR = 1;</code>
     */
    UNKNOW_ERROR(1),
    /**
     * <code>FTP_SERVICE_BUSY = 3;</code>
     */
    FTP_SERVICE_BUSY(3),
    /**
     * <code>FAILED_TO_GET_IP_ADDRESS = 4;</code>
     */
    FAILED_TO_GET_IP_ADDRESS(4),
    /**
     * <code>NETWORK_ERROR = 5;</code>
     */
    NETWORK_ERROR(5),
    /**
     * <code>FTP_SESSION_CLOSED = 6;</code>
     */
    FTP_SESSION_CLOSED(6),
    /**
     * <code>DATA_CONNECTION_CLOSED_BY_FTP_SERVER = 7;</code>
     */
    DATA_CONNECTION_CLOSED_BY_FTP_SERVER(7),
    /**
     * <code>GPRS_CSD_CONTEXT_IS_DEACTIVATED = 8;</code>
     */
    GPRS_CSD_CONTEXT_IS_DEACTIVATED(8),
    /**
     * <code>TIMEOUT = 9;</code>
     */
    TIMEOUT(9),
    /**
     * <code>INPUT_PARAMETER_ILLEGAL = 10;</code>
     */
    INPUT_PARAMETER_ILLEGAL(10),
    /**
     * <code>FILE_NOT_FOUND_IN_LOCAL_POSITION = 11;</code>
     */
    FILE_NOT_FOUND_IN_LOCAL_POSITION(11),
    /**
     * <code>FAILED_TO_GET_FILE_IN_LOCAL_POSITION = 12;</code>
     */
    FAILED_TO_GET_FILE_IN_LOCAL_POSITION(12),
    /**
     * <code>NO_ENOUGH_MEMORY = 13;</code>
     */
    NO_ENOUGH_MEMORY(13),
    /**
     * <code>FTP_SERVER_CANT_SUPPORT_SERVICE = 421;</code>
     */
    FTP_SERVER_CANT_SUPPORT_SERVICE(421),
    /**
     * <code>FAILDE_TO_OPEN_DATA_CONNECTION = 425;</code>
     */
    FAILDE_TO_OPEN_DATA_CONNECTION(425),
    /**
     * <code>THE_CONNECTION_IS_CLOSED_AND_STOP_TRANSFER = 426;</code>
     */
    THE_CONNECTION_IS_CLOSED_AND_STOP_TRANSFER(426),
    /**
     * <code>THE_REQUEST_FOR_FILE_ISNT_OPERATED = 450;</code>
     */
    THE_REQUEST_FOR_FILE_ISNT_OPERATED(450),
    /**
     * <code>THE_FTP_SERVER_HAS_NOT_ENOUGH_MEMORY = 452;</code>
     */
    THE_FTP_SERVER_HAS_NOT_ENOUGH_MEMORY(452),
    /**
     * <code>THE_FORMAT_OF_THE_FTP_COMMAND_IS_WRONG = 500;</code>
     */
    THE_FORMAT_OF_THE_FTP_COMMAND_IS_WRONG(500),
    /**
     * <code>THE_PATTERN_OF_THE_FTP_COMMAND_IS_WRONG = 501;</code>
     */
    THE_PATTERN_OF_THE_FTP_COMMAND_IS_WRONG(501),
    /**
     * <code>THE_FTP_COMMAND_ISNT_OPERATED_BY_FTP_SERVER = 502;</code>
     */
    THE_FTP_COMMAND_ISNT_OPERATED_BY_FTP_SERVER(502),
    /**
     * <code>NOT_LOGIN_TO_FTP_SERVER = 530;</code>
     */
    NOT_LOGIN_TO_FTP_SERVER(530),
    /**
     * <code>NEEDED_INFORMATION_OF_ACCOUNT = 532;</code>
     */
    NEEDED_INFORMATION_OF_ACCOUNT(532),
    /**
     * <code>THE_REQUEST_IS_NOT_OPERATED = 550;</code>
     */
    THE_REQUEST_IS_NOT_OPERATED(550),
    /**
     * <code>THE_REQUEST_IS_STOPPED = 551;</code>
     */
    THE_REQUEST_IS_STOPPED(551),
    /**
     * <code>THE_REQUEST_OF_A_FILE_IS_STOPPED = 552;</code>
     */
    THE_REQUEST_OF_A_FILE_IS_STOPPED(552),
    /**
     * <code>FILE_NAME_IS_ILLEGAL = 553;</code>
     */
    FILE_NAME_IS_ILLEGAL(553),
    /**
     * <code>HTTP_TIME_OUT = 3801;</code>
     */
    HTTP_TIME_OUT(3801),
    /**
     * <code>HTTP_BUSY = 3802;</code>
     */
    HTTP_BUSY(3802),
    /**
     * <code>HTTP_UART_BUSY = 3803;</code>
     */
    HTTP_UART_BUSY(3803),
    /**
     * <code>HTTP_GET_NO_REQUEST = 3804;</code>
     */
    HTTP_GET_NO_REQUEST(3804),
    /**
     * <code>HTTP_NETWORK_BUSY = 3805;</code>
     */
    HTTP_NETWORK_BUSY(3805),
    /**
     * <code>HTTP_NETWORK_OPEN_FAILED = 3806;</code>
     */
    HTTP_NETWORK_OPEN_FAILED(3806),
    /**
     * <code>HTTP_NETWORK_NO_CONFIG = 3807;</code>
     */
    HTTP_NETWORK_NO_CONFIG(3807),
    /**
     * <code>HTTP_NETWORK_DEACTIVE = 3808;</code>
     */
    HTTP_NETWORK_DEACTIVE(3808),
    /**
     * <code>HTTP_NETWORK_ERROR = 3809;</code>
     */
    HTTP_NETWORK_ERROR(3809),
    /**
     * <code>HTTP_URL_ERROR = 3810;</code>
     */
    HTTP_URL_ERROR(3810),
    /**
     * <code>HTTP_EMPTY_URL = 3811;</code>
     */
    HTTP_EMPTY_URL(3811),
    /**
     * <code>HTTP_IP_ADDR_ERROR = 3812;</code>
     */
    HTTP_IP_ADDR_ERROR(3812),
    /**
     * <code>HTTP_DNS_ERROR = 3813;</code>
     */
    HTTP_DNS_ERROR(3813),
    /**
     * <code>HTTP_SOCKET_CREATE_ERROR = 3814;</code>
     */
    HTTP_SOCKET_CREATE_ERROR(3814),
    /**
     * <code>HTTP_SOCKET_CONNECT_ERROR = 3815;</code>
     */
    HTTP_SOCKET_CONNECT_ERROR(3815),
    /**
     * <code>HTTP_SOCKET_READ_ERROR = 3816;</code>
     */
    HTTP_SOCKET_READ_ERROR(3816),
    /**
     * <code>HTTP_SOCKET_WRITE_ERROR = 3817;</code>
     */
    HTTP_SOCKET_WRITE_ERROR(3817),
    /**
     * <code>HTTP_SOCKET_CLOSE = 3818;</code>
     */
    HTTP_SOCKET_CLOSE(3818),
    /**
     * <code>HTTP_DATA_ENCODE_ERROR = 3819;</code>
     */
    HTTP_DATA_ENCODE_ERROR(3819),
    /**
     * <code>HTTP_DATA_DECODE_ERROR = 3820;</code>
     */
    HTTP_DATA_DECODE_ERROR(3820),
    /**
     * <code>HTTP_TO_READ_TIMEOUT = 3821;</code>
     */
    HTTP_TO_READ_TIMEOUT(3821),
    /**
     * <code>HTTP_RESPONSE_FAILED = 3822;</code>
     */
    HTTP_RESPONSE_FAILED(3822),
    /**
     * <code>INCOMING_CALL_BUSY = 3823;</code>
     */
    INCOMING_CALL_BUSY(3823),
    /**
     * <code>VOICE_CALL_BUSY = 3824;</code>
     */
    VOICE_CALL_BUSY(3824),
    /**
     * <code>INPUT_TIMEOUT = 3825;</code>
     */
    INPUT_TIMEOUT(3825),
    /**
     * <code>WAIT_DATA_TIMEOUT = 3826;</code>
     */
    WAIT_DATA_TIMEOUT(3826),
    /**
     * <code>WAIT_HTTP_RESPONSE_TIMEOUT = 3827;</code>
     */
    WAIT_HTTP_RESPONSE_TIMEOUT(3827),
    /**
     * <code>ALLOC_MEMORY_FAIL = 3828;</code>
     */
    ALLOC_MEMORY_FAIL(3828),
    /**
     * <code>HTTP_NEED_RELOCATION = 3829;</code>
     */
    HTTP_NEED_RELOCATION(3829),
    /**
     * <code>INVALID_INPUT_VALUE = 3765;</code>
     */
    INVALID_INPUT_VALUE(3765),
    /**
     * <code>NON_EXISTENT_ADDRESS = 3915;</code>
     */
    NON_EXISTENT_ADDRESS(3915),
    /**
     * <code>UFS_STORAGE_FULL = 3916;</code>
     */
    UFS_STORAGE_FULL(3916),
    /**
     * <code>DRIVE_FULL = 3917;</code>
     */
    DRIVE_FULL(3917),
    /**
     * <code>DRIVE_ERROR = 3918;</code>
     */
    DRIVE_ERROR(3918),
    /**
     * <code>NOT_FOUND = 3919;</code>
     */
    NOT_FOUND(3919),
    /**
     * <code>INVALID_FILE_NAME = 3920;</code>
     */
    INVALID_FILE_NAME(3920),
    /**
     * <code>FILE_ALREADY_EXISTED = 3921;</code>
     */
    FILE_ALREADY_EXISTED(3921),
    /**
     * <code>FAILED_TO_CREATE_FILE = 3922;</code>
     */
    FAILED_TO_CREATE_FILE(3922),
    /**
     * <code>FAILED_TO_WRITE_FILE = 3923;</code>
     */
    FAILED_TO_WRITE_FILE(3923),
    /**
     * <code>FAILED_TO_OPEN_FILE = 3924;</code>
     */
    FAILED_TO_OPEN_FILE(3924),
    /**
     * <code>FAILED_TO_READ_FILE = 3925;</code>
     */
    FAILED_TO_READ_FILE(3925),
    /**
     * <code>EXCEED_MAX_LENGTH = 4000;</code>
     */
    EXCEED_MAX_LENGTH(4000),
    /**
     * <code>OPEN_FILE_FAIL = 4001;</code>
     */
    OPEN_FILE_FAIL(4001),
    /**
     * <code>WRITE_FILE_FAIL = 4002;</code>
     */
    WRITE_FILE_FAIL(4002),
    /**
     * <code>GET_SIZE_FAIL = 4003;</code>
     */
    GET_SIZE_FAIL(4003),
    /**
     * <code>READ_FAIL = 4004;</code>
     */
    READ_FAIL(4004),
    /**
     * <code>LIST_FILE_FAIL = 4005;</code>
     */
    LIST_FILE_FAIL(4005),
    /**
     * <code>DELETE_FILE_FAIL = 4006;</code>
     */
    DELETE_FILE_FAIL(4006),
    /**
     * <code>GET_DISC_INFO_FAIL = 4007;</code>
     */
    GET_DISC_INFO_FAIL(4007),
    /**
     * <code>NO_SPACE = 4008;</code>
     */
    NO_SPACE(4008),
    /**
     * <code>TIME_OUT = 4009;</code>
     */
    TIME_OUT(4009),
    /**
     * <code>HTTP_FILE_NOT_FOUND = 4010;</code>
     */
    HTTP_FILE_NOT_FOUND(4010),
    /**
     * <code>FILE_TOO_LARGE = 4011;</code>
     */
    FILE_TOO_LARGE(4011),
    /**
     * <code>FILE_ALREADY_EXIST = 4012;</code>
     */
    FILE_ALREADY_EXIST(4012),
    /**
     * <code>INVALID_PARAMETER = 4013;</code>
     */
    INVALID_PARAMETER(4013),
    /**
     * <code>DRIVER_ERROR = 4014;</code>
     */
    DRIVER_ERROR(4014),
    /**
     * <code>CREATE_FAIL = 4015;</code>
     */
    CREATE_FAIL(4015),
    /**
     * <code>ACCESS_DENIED = 4016;</code>
     */
    ACCESS_DENIED(4016),
    /**
     * <code>FILE_IS_TOO_LARGE = 4017;</code>
     */
    FILE_IS_TOO_LARGE(4017),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OK = 0;</code>
     */
    public static final int OK_VALUE = 0;
    /**
     * <code>UNKNOW_ERROR = 1;</code>
     */
    public static final int UNKNOW_ERROR_VALUE = 1;
    /**
     * <code>FTP_SERVICE_BUSY = 3;</code>
     */
    public static final int FTP_SERVICE_BUSY_VALUE = 3;
    /**
     * <code>FAILED_TO_GET_IP_ADDRESS = 4;</code>
     */
    public static final int FAILED_TO_GET_IP_ADDRESS_VALUE = 4;
    /**
     * <code>NETWORK_ERROR = 5;</code>
     */
    public static final int NETWORK_ERROR_VALUE = 5;
    /**
     * <code>FTP_SESSION_CLOSED = 6;</code>
     */
    public static final int FTP_SESSION_CLOSED_VALUE = 6;
    /**
     * <code>DATA_CONNECTION_CLOSED_BY_FTP_SERVER = 7;</code>
     */
    public static final int DATA_CONNECTION_CLOSED_BY_FTP_SERVER_VALUE = 7;
    /**
     * <code>GPRS_CSD_CONTEXT_IS_DEACTIVATED = 8;</code>
     */
    public static final int GPRS_CSD_CONTEXT_IS_DEACTIVATED_VALUE = 8;
    /**
     * <code>TIMEOUT = 9;</code>
     */
    public static final int TIMEOUT_VALUE = 9;
    /**
     * <code>INPUT_PARAMETER_ILLEGAL = 10;</code>
     */
    public static final int INPUT_PARAMETER_ILLEGAL_VALUE = 10;
    /**
     * <code>FILE_NOT_FOUND_IN_LOCAL_POSITION = 11;</code>
     */
    public static final int FILE_NOT_FOUND_IN_LOCAL_POSITION_VALUE = 11;
    /**
     * <code>FAILED_TO_GET_FILE_IN_LOCAL_POSITION = 12;</code>
     */
    public static final int FAILED_TO_GET_FILE_IN_LOCAL_POSITION_VALUE = 12;
    /**
     * <code>NO_ENOUGH_MEMORY = 13;</code>
     */
    public static final int NO_ENOUGH_MEMORY_VALUE = 13;
    /**
     * <code>FTP_SERVER_CANT_SUPPORT_SERVICE = 421;</code>
     */
    public static final int FTP_SERVER_CANT_SUPPORT_SERVICE_VALUE = 421;
    /**
     * <code>FAILDE_TO_OPEN_DATA_CONNECTION = 425;</code>
     */
    public static final int FAILDE_TO_OPEN_DATA_CONNECTION_VALUE = 425;
    /**
     * <code>THE_CONNECTION_IS_CLOSED_AND_STOP_TRANSFER = 426;</code>
     */
    public static final int THE_CONNECTION_IS_CLOSED_AND_STOP_TRANSFER_VALUE = 426;
    /**
     * <code>THE_REQUEST_FOR_FILE_ISNT_OPERATED = 450;</code>
     */
    public static final int THE_REQUEST_FOR_FILE_ISNT_OPERATED_VALUE = 450;
    /**
     * <code>THE_FTP_SERVER_HAS_NOT_ENOUGH_MEMORY = 452;</code>
     */
    public static final int THE_FTP_SERVER_HAS_NOT_ENOUGH_MEMORY_VALUE = 452;
    /**
     * <code>THE_FORMAT_OF_THE_FTP_COMMAND_IS_WRONG = 500;</code>
     */
    public static final int THE_FORMAT_OF_THE_FTP_COMMAND_IS_WRONG_VALUE = 500;
    /**
     * <code>THE_PATTERN_OF_THE_FTP_COMMAND_IS_WRONG = 501;</code>
     */
    public static final int THE_PATTERN_OF_THE_FTP_COMMAND_IS_WRONG_VALUE = 501;
    /**
     * <code>THE_FTP_COMMAND_ISNT_OPERATED_BY_FTP_SERVER = 502;</code>
     */
    public static final int THE_FTP_COMMAND_ISNT_OPERATED_BY_FTP_SERVER_VALUE = 502;
    /**
     * <code>NOT_LOGIN_TO_FTP_SERVER = 530;</code>
     */
    public static final int NOT_LOGIN_TO_FTP_SERVER_VALUE = 530;
    /**
     * <code>NEEDED_INFORMATION_OF_ACCOUNT = 532;</code>
     */
    public static final int NEEDED_INFORMATION_OF_ACCOUNT_VALUE = 532;
    /**
     * <code>THE_REQUEST_IS_NOT_OPERATED = 550;</code>
     */
    public static final int THE_REQUEST_IS_NOT_OPERATED_VALUE = 550;
    /**
     * <code>THE_REQUEST_IS_STOPPED = 551;</code>
     */
    public static final int THE_REQUEST_IS_STOPPED_VALUE = 551;
    /**
     * <code>THE_REQUEST_OF_A_FILE_IS_STOPPED = 552;</code>
     */
    public static final int THE_REQUEST_OF_A_FILE_IS_STOPPED_VALUE = 552;
    /**
     * <code>FILE_NAME_IS_ILLEGAL = 553;</code>
     */
    public static final int FILE_NAME_IS_ILLEGAL_VALUE = 553;
    /**
     * <code>HTTP_TIME_OUT = 3801;</code>
     */
    public static final int HTTP_TIME_OUT_VALUE = 3801;
    /**
     * <code>HTTP_BUSY = 3802;</code>
     */
    public static final int HTTP_BUSY_VALUE = 3802;
    /**
     * <code>HTTP_UART_BUSY = 3803;</code>
     */
    public static final int HTTP_UART_BUSY_VALUE = 3803;
    /**
     * <code>HTTP_GET_NO_REQUEST = 3804;</code>
     */
    public static final int HTTP_GET_NO_REQUEST_VALUE = 3804;
    /**
     * <code>HTTP_NETWORK_BUSY = 3805;</code>
     */
    public static final int HTTP_NETWORK_BUSY_VALUE = 3805;
    /**
     * <code>HTTP_NETWORK_OPEN_FAILED = 3806;</code>
     */
    public static final int HTTP_NETWORK_OPEN_FAILED_VALUE = 3806;
    /**
     * <code>HTTP_NETWORK_NO_CONFIG = 3807;</code>
     */
    public static final int HTTP_NETWORK_NO_CONFIG_VALUE = 3807;
    /**
     * <code>HTTP_NETWORK_DEACTIVE = 3808;</code>
     */
    public static final int HTTP_NETWORK_DEACTIVE_VALUE = 3808;
    /**
     * <code>HTTP_NETWORK_ERROR = 3809;</code>
     */
    public static final int HTTP_NETWORK_ERROR_VALUE = 3809;
    /**
     * <code>HTTP_URL_ERROR = 3810;</code>
     */
    public static final int HTTP_URL_ERROR_VALUE = 3810;
    /**
     * <code>HTTP_EMPTY_URL = 3811;</code>
     */
    public static final int HTTP_EMPTY_URL_VALUE = 3811;
    /**
     * <code>HTTP_IP_ADDR_ERROR = 3812;</code>
     */
    public static final int HTTP_IP_ADDR_ERROR_VALUE = 3812;
    /**
     * <code>HTTP_DNS_ERROR = 3813;</code>
     */
    public static final int HTTP_DNS_ERROR_VALUE = 3813;
    /**
     * <code>HTTP_SOCKET_CREATE_ERROR = 3814;</code>
     */
    public static final int HTTP_SOCKET_CREATE_ERROR_VALUE = 3814;
    /**
     * <code>HTTP_SOCKET_CONNECT_ERROR = 3815;</code>
     */
    public static final int HTTP_SOCKET_CONNECT_ERROR_VALUE = 3815;
    /**
     * <code>HTTP_SOCKET_READ_ERROR = 3816;</code>
     */
    public static final int HTTP_SOCKET_READ_ERROR_VALUE = 3816;
    /**
     * <code>HTTP_SOCKET_WRITE_ERROR = 3817;</code>
     */
    public static final int HTTP_SOCKET_WRITE_ERROR_VALUE = 3817;
    /**
     * <code>HTTP_SOCKET_CLOSE = 3818;</code>
     */
    public static final int HTTP_SOCKET_CLOSE_VALUE = 3818;
    /**
     * <code>HTTP_DATA_ENCODE_ERROR = 3819;</code>
     */
    public static final int HTTP_DATA_ENCODE_ERROR_VALUE = 3819;
    /**
     * <code>HTTP_DATA_DECODE_ERROR = 3820;</code>
     */
    public static final int HTTP_DATA_DECODE_ERROR_VALUE = 3820;
    /**
     * <code>HTTP_TO_READ_TIMEOUT = 3821;</code>
     */
    public static final int HTTP_TO_READ_TIMEOUT_VALUE = 3821;
    /**
     * <code>HTTP_RESPONSE_FAILED = 3822;</code>
     */
    public static final int HTTP_RESPONSE_FAILED_VALUE = 3822;
    /**
     * <code>INCOMING_CALL_BUSY = 3823;</code>
     */
    public static final int INCOMING_CALL_BUSY_VALUE = 3823;
    /**
     * <code>VOICE_CALL_BUSY = 3824;</code>
     */
    public static final int VOICE_CALL_BUSY_VALUE = 3824;
    /**
     * <code>INPUT_TIMEOUT = 3825;</code>
     */
    public static final int INPUT_TIMEOUT_VALUE = 3825;
    /**
     * <code>WAIT_DATA_TIMEOUT = 3826;</code>
     */
    public static final int WAIT_DATA_TIMEOUT_VALUE = 3826;
    /**
     * <code>WAIT_HTTP_RESPONSE_TIMEOUT = 3827;</code>
     */
    public static final int WAIT_HTTP_RESPONSE_TIMEOUT_VALUE = 3827;
    /**
     * <code>ALLOC_MEMORY_FAIL = 3828;</code>
     */
    public static final int ALLOC_MEMORY_FAIL_VALUE = 3828;
    /**
     * <code>HTTP_NEED_RELOCATION = 3829;</code>
     */
    public static final int HTTP_NEED_RELOCATION_VALUE = 3829;
    /**
     * <code>INVALID_INPUT_VALUE = 3765;</code>
     */
    public static final int INVALID_INPUT_VALUE_VALUE = 3765;
    /**
     * <code>NON_EXISTENT_ADDRESS = 3915;</code>
     */
    public static final int NON_EXISTENT_ADDRESS_VALUE = 3915;
    /**
     * <code>UFS_STORAGE_FULL = 3916;</code>
     */
    public static final int UFS_STORAGE_FULL_VALUE = 3916;
    /**
     * <code>DRIVE_FULL = 3917;</code>
     */
    public static final int DRIVE_FULL_VALUE = 3917;
    /**
     * <code>DRIVE_ERROR = 3918;</code>
     */
    public static final int DRIVE_ERROR_VALUE = 3918;
    /**
     * <code>NOT_FOUND = 3919;</code>
     */
    public static final int NOT_FOUND_VALUE = 3919;
    /**
     * <code>INVALID_FILE_NAME = 3920;</code>
     */
    public static final int INVALID_FILE_NAME_VALUE = 3920;
    /**
     * <code>FILE_ALREADY_EXISTED = 3921;</code>
     */
    public static final int FILE_ALREADY_EXISTED_VALUE = 3921;
    /**
     * <code>FAILED_TO_CREATE_FILE = 3922;</code>
     */
    public static final int FAILED_TO_CREATE_FILE_VALUE = 3922;
    /**
     * <code>FAILED_TO_WRITE_FILE = 3923;</code>
     */
    public static final int FAILED_TO_WRITE_FILE_VALUE = 3923;
    /**
     * <code>FAILED_TO_OPEN_FILE = 3924;</code>
     */
    public static final int FAILED_TO_OPEN_FILE_VALUE = 3924;
    /**
     * <code>FAILED_TO_READ_FILE = 3925;</code>
     */
    public static final int FAILED_TO_READ_FILE_VALUE = 3925;
    /**
     * <code>EXCEED_MAX_LENGTH = 4000;</code>
     */
    public static final int EXCEED_MAX_LENGTH_VALUE = 4000;
    /**
     * <code>OPEN_FILE_FAIL = 4001;</code>
     */
    public static final int OPEN_FILE_FAIL_VALUE = 4001;
    /**
     * <code>WRITE_FILE_FAIL = 4002;</code>
     */
    public static final int WRITE_FILE_FAIL_VALUE = 4002;
    /**
     * <code>GET_SIZE_FAIL = 4003;</code>
     */
    public static final int GET_SIZE_FAIL_VALUE = 4003;
    /**
     * <code>READ_FAIL = 4004;</code>
     */
    public static final int READ_FAIL_VALUE = 4004;
    /**
     * <code>LIST_FILE_FAIL = 4005;</code>
     */
    public static final int LIST_FILE_FAIL_VALUE = 4005;
    /**
     * <code>DELETE_FILE_FAIL = 4006;</code>
     */
    public static final int DELETE_FILE_FAIL_VALUE = 4006;
    /**
     * <code>GET_DISC_INFO_FAIL = 4007;</code>
     */
    public static final int GET_DISC_INFO_FAIL_VALUE = 4007;
    /**
     * <code>NO_SPACE = 4008;</code>
     */
    public static final int NO_SPACE_VALUE = 4008;
    /**
     * <code>TIME_OUT = 4009;</code>
     */
    public static final int TIME_OUT_VALUE = 4009;
    /**
     * <code>HTTP_FILE_NOT_FOUND = 4010;</code>
     */
    public static final int HTTP_FILE_NOT_FOUND_VALUE = 4010;
    /**
     * <code>FILE_TOO_LARGE = 4011;</code>
     */
    public static final int FILE_TOO_LARGE_VALUE = 4011;
    /**
     * <code>FILE_ALREADY_EXIST = 4012;</code>
     */
    public static final int FILE_ALREADY_EXIST_VALUE = 4012;
    /**
     * <code>INVALID_PARAMETER = 4013;</code>
     */
    public static final int INVALID_PARAMETER_VALUE = 4013;
    /**
     * <code>DRIVER_ERROR = 4014;</code>
     */
    public static final int DRIVER_ERROR_VALUE = 4014;
    /**
     * <code>CREATE_FAIL = 4015;</code>
     */
    public static final int CREATE_FAIL_VALUE = 4015;
    /**
     * <code>ACCESS_DENIED = 4016;</code>
     */
    public static final int ACCESS_DENIED_VALUE = 4016;
    /**
     * <code>FILE_IS_TOO_LARGE = 4017;</code>
     */
    public static final int FILE_IS_TOO_LARGE_VALUE = 4017;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Error valueOf(int value) {
      return forNumber(value);
    }

    public static Error forNumber(int value) {
      switch (value) {
        case 0: return OK;
        case 1: return UNKNOW_ERROR;
        case 3: return FTP_SERVICE_BUSY;
        case 4: return FAILED_TO_GET_IP_ADDRESS;
        case 5: return NETWORK_ERROR;
        case 6: return FTP_SESSION_CLOSED;
        case 7: return DATA_CONNECTION_CLOSED_BY_FTP_SERVER;
        case 8: return GPRS_CSD_CONTEXT_IS_DEACTIVATED;
        case 9: return TIMEOUT;
        case 10: return INPUT_PARAMETER_ILLEGAL;
        case 11: return FILE_NOT_FOUND_IN_LOCAL_POSITION;
        case 12: return FAILED_TO_GET_FILE_IN_LOCAL_POSITION;
        case 13: return NO_ENOUGH_MEMORY;
        case 421: return FTP_SERVER_CANT_SUPPORT_SERVICE;
        case 425: return FAILDE_TO_OPEN_DATA_CONNECTION;
        case 426: return THE_CONNECTION_IS_CLOSED_AND_STOP_TRANSFER;
        case 450: return THE_REQUEST_FOR_FILE_ISNT_OPERATED;
        case 452: return THE_FTP_SERVER_HAS_NOT_ENOUGH_MEMORY;
        case 500: return THE_FORMAT_OF_THE_FTP_COMMAND_IS_WRONG;
        case 501: return THE_PATTERN_OF_THE_FTP_COMMAND_IS_WRONG;
        case 502: return THE_FTP_COMMAND_ISNT_OPERATED_BY_FTP_SERVER;
        case 530: return NOT_LOGIN_TO_FTP_SERVER;
        case 532: return NEEDED_INFORMATION_OF_ACCOUNT;
        case 550: return THE_REQUEST_IS_NOT_OPERATED;
        case 551: return THE_REQUEST_IS_STOPPED;
        case 552: return THE_REQUEST_OF_A_FILE_IS_STOPPED;
        case 553: return FILE_NAME_IS_ILLEGAL;
        case 3801: return HTTP_TIME_OUT;
        case 3802: return HTTP_BUSY;
        case 3803: return HTTP_UART_BUSY;
        case 3804: return HTTP_GET_NO_REQUEST;
        case 3805: return HTTP_NETWORK_BUSY;
        case 3806: return HTTP_NETWORK_OPEN_FAILED;
        case 3807: return HTTP_NETWORK_NO_CONFIG;
        case 3808: return HTTP_NETWORK_DEACTIVE;
        case 3809: return HTTP_NETWORK_ERROR;
        case 3810: return HTTP_URL_ERROR;
        case 3811: return HTTP_EMPTY_URL;
        case 3812: return HTTP_IP_ADDR_ERROR;
        case 3813: return HTTP_DNS_ERROR;
        case 3814: return HTTP_SOCKET_CREATE_ERROR;
        case 3815: return HTTP_SOCKET_CONNECT_ERROR;
        case 3816: return HTTP_SOCKET_READ_ERROR;
        case 3817: return HTTP_SOCKET_WRITE_ERROR;
        case 3818: return HTTP_SOCKET_CLOSE;
        case 3819: return HTTP_DATA_ENCODE_ERROR;
        case 3820: return HTTP_DATA_DECODE_ERROR;
        case 3821: return HTTP_TO_READ_TIMEOUT;
        case 3822: return HTTP_RESPONSE_FAILED;
        case 3823: return INCOMING_CALL_BUSY;
        case 3824: return VOICE_CALL_BUSY;
        case 3825: return INPUT_TIMEOUT;
        case 3826: return WAIT_DATA_TIMEOUT;
        case 3827: return WAIT_HTTP_RESPONSE_TIMEOUT;
        case 3828: return ALLOC_MEMORY_FAIL;
        case 3829: return HTTP_NEED_RELOCATION;
        case 3765: return INVALID_INPUT_VALUE;
        case 3915: return NON_EXISTENT_ADDRESS;
        case 3916: return UFS_STORAGE_FULL;
        case 3917: return DRIVE_FULL;
        case 3918: return DRIVE_ERROR;
        case 3919: return NOT_FOUND;
        case 3920: return INVALID_FILE_NAME;
        case 3921: return FILE_ALREADY_EXISTED;
        case 3922: return FAILED_TO_CREATE_FILE;
        case 3923: return FAILED_TO_WRITE_FILE;
        case 3924: return FAILED_TO_OPEN_FILE;
        case 3925: return FAILED_TO_READ_FILE;
        case 4000: return EXCEED_MAX_LENGTH;
        case 4001: return OPEN_FILE_FAIL;
        case 4002: return WRITE_FILE_FAIL;
        case 4003: return GET_SIZE_FAIL;
        case 4004: return READ_FAIL;
        case 4005: return LIST_FILE_FAIL;
        case 4006: return DELETE_FILE_FAIL;
        case 4007: return GET_DISC_INFO_FAIL;
        case 4008: return NO_SPACE;
        case 4009: return TIME_OUT;
        case 4010: return HTTP_FILE_NOT_FOUND;
        case 4011: return FILE_TOO_LARGE;
        case 4012: return FILE_ALREADY_EXIST;
        case 4013: return INVALID_PARAMETER;
        case 4014: return DRIVER_ERROR;
        case 4015: return CREATE_FAIL;
        case 4016: return ACCESS_DENIED;
        case 4017: return FILE_IS_TOO_LARGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Error>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Error> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Error>() {
            public Error findValueByNumber(int number) {
              return Error.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.getDescriptor().getEnumTypes().get(4);
    }

    private static final Error[] VALUES = values();

    public static Error valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Error(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.rtrk.protobuf.Error)
  }

  public interface HTTPCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.rtrk.protobuf.HTTPCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
     */
    int getMessageTypeValue();
    /**
     * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
     */
    com.rtrk.atcommands.ATCommands.HTTPMessageType getMessageType();

    /**
     * <code>optional bool test = 2;</code>
     */
    boolean getTest();

    /**
     * <code>optional int32 urlLength = 3;</code>
     */
    int getUrlLength();

    /**
     * <code>optional int32 inputTime = 4;</code>
     */
    int getInputTime();

    /**
     * <code>optional int32 toReadTime = 5;</code>
     */
    int getToReadTime();

    /**
     * <code>optional int32 waitTime = 6;</code>
     */
    int getWaitTime();

    /**
     * <code>optional int32 bodySize = 7;</code>
     */
    int getBodySize();

    /**
     * <code>optional string fileName = 8;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string fileName = 8;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>optional int32 length = 9;</code>
     */
    int getLength();

    /**
     * <code>optional int32 dlSize = 10;</code>
     */
    int getDlSize();

    /**
     * <code>optional int32 contentLength = 11;</code>
     */
    int getContentLength();

    /**
     * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
     */
    int getErrorcodeValue();
    /**
     * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
     */
    com.rtrk.atcommands.ATCommands.Error getErrorcode();

    /**
     * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
     */
    int getErrorValue();
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
     */
    com.rtrk.atcommands.ATCommands.Error getError();

    /**
     * <code>optional bytes data = 14;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code com.rtrk.protobuf.HTTPCommand}
   */
  public  static final class HTTPCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.rtrk.protobuf.HTTPCommand)
      HTTPCommandOrBuilder {
    // Use HTTPCommand.newBuilder() to construct.
    private HTTPCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HTTPCommand() {
      messageType_ = 0;
      test_ = false;
      urlLength_ = 0;
      inputTime_ = 0;
      toReadTime_ = 0;
      waitTime_ = 0;
      bodySize_ = 0;
      fileName_ = "";
      length_ = 0;
      dlSize_ = 0;
      contentLength_ = 0;
      errorcode_ = 0;
      error_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HTTPCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              messageType_ = rawValue;
              break;
            }
            case 16: {

              test_ = input.readBool();
              break;
            }
            case 24: {

              urlLength_ = input.readInt32();
              break;
            }
            case 32: {

              inputTime_ = input.readInt32();
              break;
            }
            case 40: {

              toReadTime_ = input.readInt32();
              break;
            }
            case 48: {

              waitTime_ = input.readInt32();
              break;
            }
            case 56: {

              bodySize_ = input.readInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              fileName_ = s;
              break;
            }
            case 72: {

              length_ = input.readInt32();
              break;
            }
            case 80: {

              dlSize_ = input.readInt32();
              break;
            }
            case 88: {

              contentLength_ = input.readInt32();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();

              errorcode_ = rawValue;
              break;
            }
            case 104: {
              int rawValue = input.readEnum();

              error_ = rawValue;
              break;
            }
            case 114: {

              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_HTTPCommand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_HTTPCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rtrk.atcommands.ATCommands.HTTPCommand.class, com.rtrk.atcommands.ATCommands.HTTPCommand.Builder.class);
    }

    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private int messageType_;
    /**
     * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
     */
    public int getMessageTypeValue() {
      return messageType_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
     */
    public com.rtrk.atcommands.ATCommands.HTTPMessageType getMessageType() {
      com.rtrk.atcommands.ATCommands.HTTPMessageType result = com.rtrk.atcommands.ATCommands.HTTPMessageType.valueOf(messageType_);
      return result == null ? com.rtrk.atcommands.ATCommands.HTTPMessageType.UNRECOGNIZED : result;
    }

    public static final int TEST_FIELD_NUMBER = 2;
    private boolean test_;
    /**
     * <code>optional bool test = 2;</code>
     */
    public boolean getTest() {
      return test_;
    }

    public static final int URLLENGTH_FIELD_NUMBER = 3;
    private int urlLength_;
    /**
     * <code>optional int32 urlLength = 3;</code>
     */
    public int getUrlLength() {
      return urlLength_;
    }

    public static final int INPUTTIME_FIELD_NUMBER = 4;
    private int inputTime_;
    /**
     * <code>optional int32 inputTime = 4;</code>
     */
    public int getInputTime() {
      return inputTime_;
    }

    public static final int TOREADTIME_FIELD_NUMBER = 5;
    private int toReadTime_;
    /**
     * <code>optional int32 toReadTime = 5;</code>
     */
    public int getToReadTime() {
      return toReadTime_;
    }

    public static final int WAITTIME_FIELD_NUMBER = 6;
    private int waitTime_;
    /**
     * <code>optional int32 waitTime = 6;</code>
     */
    public int getWaitTime() {
      return waitTime_;
    }

    public static final int BODYSIZE_FIELD_NUMBER = 7;
    private int bodySize_;
    /**
     * <code>optional int32 bodySize = 7;</code>
     */
    public int getBodySize() {
      return bodySize_;
    }

    public static final int FILENAME_FIELD_NUMBER = 8;
    private volatile java.lang.Object fileName_;
    /**
     * <code>optional string fileName = 8;</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string fileName = 8;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LENGTH_FIELD_NUMBER = 9;
    private int length_;
    /**
     * <code>optional int32 length = 9;</code>
     */
    public int getLength() {
      return length_;
    }

    public static final int DLSIZE_FIELD_NUMBER = 10;
    private int dlSize_;
    /**
     * <code>optional int32 dlSize = 10;</code>
     */
    public int getDlSize() {
      return dlSize_;
    }

    public static final int CONTENTLENGTH_FIELD_NUMBER = 11;
    private int contentLength_;
    /**
     * <code>optional int32 contentLength = 11;</code>
     */
    public int getContentLength() {
      return contentLength_;
    }

    public static final int ERRORCODE_FIELD_NUMBER = 12;
    private int errorcode_;
    /**
     * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
     */
    public int getErrorcodeValue() {
      return errorcode_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
     */
    public com.rtrk.atcommands.ATCommands.Error getErrorcode() {
      com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(errorcode_);
      return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
    }

    public static final int ERROR_FIELD_NUMBER = 13;
    private int error_;
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
     */
    public int getErrorValue() {
      return error_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
     */
    public com.rtrk.atcommands.ATCommands.Error getError() {
      com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(error_);
      return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 14;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 14;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageType_ != com.rtrk.atcommands.ATCommands.HTTPMessageType.SET_HTTP_SERVER_URL.getNumber()) {
        output.writeEnum(1, messageType_);
      }
      if (test_ != false) {
        output.writeBool(2, test_);
      }
      if (urlLength_ != 0) {
        output.writeInt32(3, urlLength_);
      }
      if (inputTime_ != 0) {
        output.writeInt32(4, inputTime_);
      }
      if (toReadTime_ != 0) {
        output.writeInt32(5, toReadTime_);
      }
      if (waitTime_ != 0) {
        output.writeInt32(6, waitTime_);
      }
      if (bodySize_ != 0) {
        output.writeInt32(7, bodySize_);
      }
      if (!getFileNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, fileName_);
      }
      if (length_ != 0) {
        output.writeInt32(9, length_);
      }
      if (dlSize_ != 0) {
        output.writeInt32(10, dlSize_);
      }
      if (contentLength_ != 0) {
        output.writeInt32(11, contentLength_);
      }
      if (errorcode_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        output.writeEnum(12, errorcode_);
      }
      if (error_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        output.writeEnum(13, error_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(14, data_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageType_ != com.rtrk.atcommands.ATCommands.HTTPMessageType.SET_HTTP_SERVER_URL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (test_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, test_);
      }
      if (urlLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, urlLength_);
      }
      if (inputTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, inputTime_);
      }
      if (toReadTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, toReadTime_);
      }
      if (waitTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, waitTime_);
      }
      if (bodySize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bodySize_);
      }
      if (!getFileNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, fileName_);
      }
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, length_);
      }
      if (dlSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, dlSize_);
      }
      if (contentLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, contentLength_);
      }
      if (errorcode_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, errorcode_);
      }
      if (error_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, error_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, data_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.rtrk.atcommands.ATCommands.HTTPCommand)) {
        return super.equals(obj);
      }
      com.rtrk.atcommands.ATCommands.HTTPCommand other = (com.rtrk.atcommands.ATCommands.HTTPCommand) obj;

      boolean result = true;
      result = result && messageType_ == other.messageType_;
      result = result && (getTest()
          == other.getTest());
      result = result && (getUrlLength()
          == other.getUrlLength());
      result = result && (getInputTime()
          == other.getInputTime());
      result = result && (getToReadTime()
          == other.getToReadTime());
      result = result && (getWaitTime()
          == other.getWaitTime());
      result = result && (getBodySize()
          == other.getBodySize());
      result = result && getFileName()
          .equals(other.getFileName());
      result = result && (getLength()
          == other.getLength());
      result = result && (getDlSize()
          == other.getDlSize());
      result = result && (getContentLength()
          == other.getContentLength());
      result = result && errorcode_ == other.errorcode_;
      result = result && error_ == other.error_;
      result = result && getData()
          .equals(other.getData());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + MESSAGETYPE_FIELD_NUMBER;
      hash = (53 * hash) + messageType_;
      hash = (37 * hash) + TEST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTest());
      hash = (37 * hash) + URLLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getUrlLength();
      hash = (37 * hash) + INPUTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getInputTime();
      hash = (37 * hash) + TOREADTIME_FIELD_NUMBER;
      hash = (53 * hash) + getToReadTime();
      hash = (37 * hash) + WAITTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWaitTime();
      hash = (37 * hash) + BODYSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getBodySize();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (37 * hash) + DLSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getDlSize();
      hash = (37 * hash) + CONTENTLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getContentLength();
      hash = (37 * hash) + ERRORCODE_FIELD_NUMBER;
      hash = (53 * hash) + errorcode_;
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + error_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.HTTPCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.rtrk.atcommands.ATCommands.HTTPCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.rtrk.protobuf.HTTPCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.rtrk.protobuf.HTTPCommand)
        com.rtrk.atcommands.ATCommands.HTTPCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_HTTPCommand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_HTTPCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rtrk.atcommands.ATCommands.HTTPCommand.class, com.rtrk.atcommands.ATCommands.HTTPCommand.Builder.class);
      }

      // Construct using com.rtrk.atcommands.ATCommands.HTTPCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        messageType_ = 0;

        test_ = false;

        urlLength_ = 0;

        inputTime_ = 0;

        toReadTime_ = 0;

        waitTime_ = 0;

        bodySize_ = 0;

        fileName_ = "";

        length_ = 0;

        dlSize_ = 0;

        contentLength_ = 0;

        errorcode_ = 0;

        error_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_HTTPCommand_descriptor;
      }

      public com.rtrk.atcommands.ATCommands.HTTPCommand getDefaultInstanceForType() {
        return com.rtrk.atcommands.ATCommands.HTTPCommand.getDefaultInstance();
      }

      public com.rtrk.atcommands.ATCommands.HTTPCommand build() {
        com.rtrk.atcommands.ATCommands.HTTPCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rtrk.atcommands.ATCommands.HTTPCommand buildPartial() {
        com.rtrk.atcommands.ATCommands.HTTPCommand result = new com.rtrk.atcommands.ATCommands.HTTPCommand(this);
        result.messageType_ = messageType_;
        result.test_ = test_;
        result.urlLength_ = urlLength_;
        result.inputTime_ = inputTime_;
        result.toReadTime_ = toReadTime_;
        result.waitTime_ = waitTime_;
        result.bodySize_ = bodySize_;
        result.fileName_ = fileName_;
        result.length_ = length_;
        result.dlSize_ = dlSize_;
        result.contentLength_ = contentLength_;
        result.errorcode_ = errorcode_;
        result.error_ = error_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rtrk.atcommands.ATCommands.HTTPCommand) {
          return mergeFrom((com.rtrk.atcommands.ATCommands.HTTPCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rtrk.atcommands.ATCommands.HTTPCommand other) {
        if (other == com.rtrk.atcommands.ATCommands.HTTPCommand.getDefaultInstance()) return this;
        if (other.messageType_ != 0) {
          setMessageTypeValue(other.getMessageTypeValue());
        }
        if (other.getTest() != false) {
          setTest(other.getTest());
        }
        if (other.getUrlLength() != 0) {
          setUrlLength(other.getUrlLength());
        }
        if (other.getInputTime() != 0) {
          setInputTime(other.getInputTime());
        }
        if (other.getToReadTime() != 0) {
          setToReadTime(other.getToReadTime());
        }
        if (other.getWaitTime() != 0) {
          setWaitTime(other.getWaitTime());
        }
        if (other.getBodySize() != 0) {
          setBodySize(other.getBodySize());
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (other.getDlSize() != 0) {
          setDlSize(other.getDlSize());
        }
        if (other.getContentLength() != 0) {
          setContentLength(other.getContentLength());
        }
        if (other.errorcode_ != 0) {
          setErrorcodeValue(other.getErrorcodeValue());
        }
        if (other.error_ != 0) {
          setErrorValue(other.getErrorValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rtrk.atcommands.ATCommands.HTTPCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rtrk.atcommands.ATCommands.HTTPCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int messageType_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
       */
      public int getMessageTypeValue() {
        return messageType_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
       */
      public Builder setMessageTypeValue(int value) {
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
       */
      public com.rtrk.atcommands.ATCommands.HTTPMessageType getMessageType() {
        com.rtrk.atcommands.ATCommands.HTTPMessageType result = com.rtrk.atcommands.ATCommands.HTTPMessageType.valueOf(messageType_);
        return result == null ? com.rtrk.atcommands.ATCommands.HTTPMessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
       */
      public Builder setMessageType(com.rtrk.atcommands.ATCommands.HTTPMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.HTTPMessageType messageType = 1;</code>
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private boolean test_ ;
      /**
       * <code>optional bool test = 2;</code>
       */
      public boolean getTest() {
        return test_;
      }
      /**
       * <code>optional bool test = 2;</code>
       */
      public Builder setTest(boolean value) {
        
        test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool test = 2;</code>
       */
      public Builder clearTest() {
        
        test_ = false;
        onChanged();
        return this;
      }

      private int urlLength_ ;
      /**
       * <code>optional int32 urlLength = 3;</code>
       */
      public int getUrlLength() {
        return urlLength_;
      }
      /**
       * <code>optional int32 urlLength = 3;</code>
       */
      public Builder setUrlLength(int value) {
        
        urlLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 urlLength = 3;</code>
       */
      public Builder clearUrlLength() {
        
        urlLength_ = 0;
        onChanged();
        return this;
      }

      private int inputTime_ ;
      /**
       * <code>optional int32 inputTime = 4;</code>
       */
      public int getInputTime() {
        return inputTime_;
      }
      /**
       * <code>optional int32 inputTime = 4;</code>
       */
      public Builder setInputTime(int value) {
        
        inputTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inputTime = 4;</code>
       */
      public Builder clearInputTime() {
        
        inputTime_ = 0;
        onChanged();
        return this;
      }

      private int toReadTime_ ;
      /**
       * <code>optional int32 toReadTime = 5;</code>
       */
      public int getToReadTime() {
        return toReadTime_;
      }
      /**
       * <code>optional int32 toReadTime = 5;</code>
       */
      public Builder setToReadTime(int value) {
        
        toReadTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 toReadTime = 5;</code>
       */
      public Builder clearToReadTime() {
        
        toReadTime_ = 0;
        onChanged();
        return this;
      }

      private int waitTime_ ;
      /**
       * <code>optional int32 waitTime = 6;</code>
       */
      public int getWaitTime() {
        return waitTime_;
      }
      /**
       * <code>optional int32 waitTime = 6;</code>
       */
      public Builder setWaitTime(int value) {
        
        waitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 waitTime = 6;</code>
       */
      public Builder clearWaitTime() {
        
        waitTime_ = 0;
        onChanged();
        return this;
      }

      private int bodySize_ ;
      /**
       * <code>optional int32 bodySize = 7;</code>
       */
      public int getBodySize() {
        return bodySize_;
      }
      /**
       * <code>optional int32 bodySize = 7;</code>
       */
      public Builder setBodySize(int value) {
        
        bodySize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bodySize = 7;</code>
       */
      public Builder clearBodySize() {
        
        bodySize_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>optional string fileName = 8;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public Builder clearFileName() {
        
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fileName_ = value;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <code>optional int32 length = 9;</code>
       */
      public int getLength() {
        return length_;
      }
      /**
       * <code>optional int32 length = 9;</code>
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 length = 9;</code>
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }

      private int dlSize_ ;
      /**
       * <code>optional int32 dlSize = 10;</code>
       */
      public int getDlSize() {
        return dlSize_;
      }
      /**
       * <code>optional int32 dlSize = 10;</code>
       */
      public Builder setDlSize(int value) {
        
        dlSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dlSize = 10;</code>
       */
      public Builder clearDlSize() {
        
        dlSize_ = 0;
        onChanged();
        return this;
      }

      private int contentLength_ ;
      /**
       * <code>optional int32 contentLength = 11;</code>
       */
      public int getContentLength() {
        return contentLength_;
      }
      /**
       * <code>optional int32 contentLength = 11;</code>
       */
      public Builder setContentLength(int value) {
        
        contentLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 contentLength = 11;</code>
       */
      public Builder clearContentLength() {
        
        contentLength_ = 0;
        onChanged();
        return this;
      }

      private int errorcode_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
       */
      public int getErrorcodeValue() {
        return errorcode_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
       */
      public Builder setErrorcodeValue(int value) {
        errorcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
       */
      public com.rtrk.atcommands.ATCommands.Error getErrorcode() {
        com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(errorcode_);
        return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
       */
      public Builder setErrorcode(com.rtrk.atcommands.ATCommands.Error value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        errorcode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error errorcode = 12;</code>
       */
      public Builder clearErrorcode() {
        
        errorcode_ = 0;
        onChanged();
        return this;
      }

      private int error_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
       */
      public int getErrorValue() {
        return error_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
       */
      public Builder setErrorValue(int value) {
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
       */
      public com.rtrk.atcommands.ATCommands.Error getError() {
        com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(error_);
        return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
       */
      public Builder setError(com.rtrk.atcommands.ATCommands.Error value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        error_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 13;</code>
       */
      public Builder clearError() {
        
        error_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 14;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 14;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 14;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.rtrk.protobuf.HTTPCommand)
    }

    // @@protoc_insertion_point(class_scope:com.rtrk.protobuf.HTTPCommand)
    private static final com.rtrk.atcommands.ATCommands.HTTPCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.rtrk.atcommands.ATCommands.HTTPCommand();
    }

    public static com.rtrk.atcommands.ATCommands.HTTPCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HTTPCommand>
        PARSER = new com.google.protobuf.AbstractParser<HTTPCommand>() {
      public HTTPCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HTTPCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HTTPCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HTTPCommand> getParserForType() {
      return PARSER;
    }

    public com.rtrk.atcommands.ATCommands.HTTPCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.rtrk.protobuf.FileCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
     */
    int getMessageTypeValue();
    /**
     * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
     */
    com.rtrk.atcommands.ATCommands.FileMessageType getMessageType();

    /**
     * <code>optional string namePattern = 2;</code>
     */
    java.lang.String getNamePattern();
    /**
     * <code>optional string namePattern = 2;</code>
     */
    com.google.protobuf.ByteString
        getNamePatternBytes();

    /**
     * <code>optional int32 freeSize = 3;</code>
     */
    int getFreeSize();

    /**
     * <code>optional int32 totalSize = 4;</code>
     */
    int getTotalSize();

    /**
     * <code>optional int32 maxallocSize = 5;</code>
     */
    int getMaxallocSize();

    /**
     * <code>optional int32 ufsFileSize = 6;</code>
     */
    int getUfsFileSize();

    /**
     * <code>optional int32 ufsFileNumber = 7;</code>
     */
    int getUfsFileNumber();

    /**
     * <code>optional string fileName = 8;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string fileName = 8;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>optional int32 fileSize = 9;</code>
     */
    int getFileSize();

    /**
     * <code>optional int32 ramSize = 10;</code>
     */
    int getRamSize();

    /**
     * <code>optional int32 uploadSize = 11;</code>
     */
    int getUploadSize();

    /**
     * <code>optional int32 timeout = 12;</code>
     */
    int getTimeout();

    /**
     * <code>optional bool ackMode = 13;</code>
     */
    boolean getAckMode();

    /**
     * <code>optional string srcFileName = 14;</code>
     */
    java.lang.String getSrcFileName();
    /**
     * <code>optional string srcFileName = 14;</code>
     */
    com.google.protobuf.ByteString
        getSrcFileNameBytes();

    /**
     * <code>optional string destFileName = 15;</code>
     */
    java.lang.String getDestFileName();
    /**
     * <code>optional string destFileName = 15;</code>
     */
    com.google.protobuf.ByteString
        getDestFileNameBytes();

    /**
     * <code>optional bool copy = 16;</code>
     */
    boolean getCopy();

    /**
     * <code>optional bool owerwrite = 17;</code>
     */
    boolean getOwerwrite();

    /**
     * <code>optional int32 mode = 18;</code>
     */
    int getMode();

    /**
     * <code>optional int32 length = 19;</code>
     */
    int getLength();

    /**
     * <code>optional string fileHandle = 20;</code>
     */
    java.lang.String getFileHandle();
    /**
     * <code>optional string fileHandle = 20;</code>
     */
    com.google.protobuf.ByteString
        getFileHandleBytes();

    /**
     * <code>optional int32 readLength = 21;</code>
     */
    int getReadLength();

    /**
     * <code>optional int32 writtenLength = 22;</code>
     */
    int getWrittenLength();

    /**
     * <code>optional int32 totalLength = 23;</code>
     */
    int getTotalLength();

    /**
     * <code>optional int32 offset = 24;</code>
     */
    int getOffset();

    /**
     * <code>optional int32 position = 25;</code>
     */
    int getPosition();

    /**
     * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
     */
    int getErrorValue();
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
     */
    com.rtrk.atcommands.ATCommands.Error getError();
  }
  /**
   * Protobuf type {@code com.rtrk.protobuf.FileCommand}
   */
  public  static final class FileCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.rtrk.protobuf.FileCommand)
      FileCommandOrBuilder {
    // Use FileCommand.newBuilder() to construct.
    private FileCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FileCommand() {
      messageType_ = 0;
      namePattern_ = "";
      freeSize_ = 0;
      totalSize_ = 0;
      maxallocSize_ = 0;
      ufsFileSize_ = 0;
      ufsFileNumber_ = 0;
      fileName_ = "";
      fileSize_ = 0;
      ramSize_ = 0;
      uploadSize_ = 0;
      timeout_ = 0;
      ackMode_ = false;
      srcFileName_ = "";
      destFileName_ = "";
      copy_ = false;
      owerwrite_ = false;
      mode_ = 0;
      length_ = 0;
      fileHandle_ = "";
      readLength_ = 0;
      writtenLength_ = 0;
      totalLength_ = 0;
      offset_ = 0;
      position_ = 0;
      error_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FileCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              messageType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              namePattern_ = s;
              break;
            }
            case 24: {

              freeSize_ = input.readInt32();
              break;
            }
            case 32: {

              totalSize_ = input.readInt32();
              break;
            }
            case 40: {

              maxallocSize_ = input.readInt32();
              break;
            }
            case 48: {

              ufsFileSize_ = input.readInt32();
              break;
            }
            case 56: {

              ufsFileNumber_ = input.readInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              fileName_ = s;
              break;
            }
            case 72: {

              fileSize_ = input.readInt32();
              break;
            }
            case 80: {

              ramSize_ = input.readInt32();
              break;
            }
            case 88: {

              uploadSize_ = input.readInt32();
              break;
            }
            case 96: {

              timeout_ = input.readInt32();
              break;
            }
            case 104: {

              ackMode_ = input.readBool();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              srcFileName_ = s;
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              destFileName_ = s;
              break;
            }
            case 128: {

              copy_ = input.readBool();
              break;
            }
            case 136: {

              owerwrite_ = input.readBool();
              break;
            }
            case 144: {

              mode_ = input.readInt32();
              break;
            }
            case 152: {

              length_ = input.readInt32();
              break;
            }
            case 162: {
              java.lang.String s = input.readStringRequireUtf8();

              fileHandle_ = s;
              break;
            }
            case 168: {

              readLength_ = input.readInt32();
              break;
            }
            case 176: {

              writtenLength_ = input.readInt32();
              break;
            }
            case 184: {

              totalLength_ = input.readInt32();
              break;
            }
            case 192: {

              offset_ = input.readInt32();
              break;
            }
            case 200: {

              position_ = input.readInt32();
              break;
            }
            case 208: {
              int rawValue = input.readEnum();

              error_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FileCommand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FileCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rtrk.atcommands.ATCommands.FileCommand.class, com.rtrk.atcommands.ATCommands.FileCommand.Builder.class);
    }

    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private int messageType_;
    /**
     * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
     */
    public int getMessageTypeValue() {
      return messageType_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
     */
    public com.rtrk.atcommands.ATCommands.FileMessageType getMessageType() {
      com.rtrk.atcommands.ATCommands.FileMessageType result = com.rtrk.atcommands.ATCommands.FileMessageType.valueOf(messageType_);
      return result == null ? com.rtrk.atcommands.ATCommands.FileMessageType.UNRECOGNIZED : result;
    }

    public static final int NAMEPATTERN_FIELD_NUMBER = 2;
    private volatile java.lang.Object namePattern_;
    /**
     * <code>optional string namePattern = 2;</code>
     */
    public java.lang.String getNamePattern() {
      java.lang.Object ref = namePattern_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namePattern_ = s;
        return s;
      }
    }
    /**
     * <code>optional string namePattern = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNamePatternBytes() {
      java.lang.Object ref = namePattern_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namePattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREESIZE_FIELD_NUMBER = 3;
    private int freeSize_;
    /**
     * <code>optional int32 freeSize = 3;</code>
     */
    public int getFreeSize() {
      return freeSize_;
    }

    public static final int TOTALSIZE_FIELD_NUMBER = 4;
    private int totalSize_;
    /**
     * <code>optional int32 totalSize = 4;</code>
     */
    public int getTotalSize() {
      return totalSize_;
    }

    public static final int MAXALLOCSIZE_FIELD_NUMBER = 5;
    private int maxallocSize_;
    /**
     * <code>optional int32 maxallocSize = 5;</code>
     */
    public int getMaxallocSize() {
      return maxallocSize_;
    }

    public static final int UFSFILESIZE_FIELD_NUMBER = 6;
    private int ufsFileSize_;
    /**
     * <code>optional int32 ufsFileSize = 6;</code>
     */
    public int getUfsFileSize() {
      return ufsFileSize_;
    }

    public static final int UFSFILENUMBER_FIELD_NUMBER = 7;
    private int ufsFileNumber_;
    /**
     * <code>optional int32 ufsFileNumber = 7;</code>
     */
    public int getUfsFileNumber() {
      return ufsFileNumber_;
    }

    public static final int FILENAME_FIELD_NUMBER = 8;
    private volatile java.lang.Object fileName_;
    /**
     * <code>optional string fileName = 8;</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string fileName = 8;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILESIZE_FIELD_NUMBER = 9;
    private int fileSize_;
    /**
     * <code>optional int32 fileSize = 9;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }

    public static final int RAMSIZE_FIELD_NUMBER = 10;
    private int ramSize_;
    /**
     * <code>optional int32 ramSize = 10;</code>
     */
    public int getRamSize() {
      return ramSize_;
    }

    public static final int UPLOADSIZE_FIELD_NUMBER = 11;
    private int uploadSize_;
    /**
     * <code>optional int32 uploadSize = 11;</code>
     */
    public int getUploadSize() {
      return uploadSize_;
    }

    public static final int TIMEOUT_FIELD_NUMBER = 12;
    private int timeout_;
    /**
     * <code>optional int32 timeout = 12;</code>
     */
    public int getTimeout() {
      return timeout_;
    }

    public static final int ACKMODE_FIELD_NUMBER = 13;
    private boolean ackMode_;
    /**
     * <code>optional bool ackMode = 13;</code>
     */
    public boolean getAckMode() {
      return ackMode_;
    }

    public static final int SRCFILENAME_FIELD_NUMBER = 14;
    private volatile java.lang.Object srcFileName_;
    /**
     * <code>optional string srcFileName = 14;</code>
     */
    public java.lang.String getSrcFileName() {
      java.lang.Object ref = srcFileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        srcFileName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string srcFileName = 14;</code>
     */
    public com.google.protobuf.ByteString
        getSrcFileNameBytes() {
      java.lang.Object ref = srcFileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcFileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESTFILENAME_FIELD_NUMBER = 15;
    private volatile java.lang.Object destFileName_;
    /**
     * <code>optional string destFileName = 15;</code>
     */
    public java.lang.String getDestFileName() {
      java.lang.Object ref = destFileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        destFileName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string destFileName = 15;</code>
     */
    public com.google.protobuf.ByteString
        getDestFileNameBytes() {
      java.lang.Object ref = destFileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        destFileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COPY_FIELD_NUMBER = 16;
    private boolean copy_;
    /**
     * <code>optional bool copy = 16;</code>
     */
    public boolean getCopy() {
      return copy_;
    }

    public static final int OWERWRITE_FIELD_NUMBER = 17;
    private boolean owerwrite_;
    /**
     * <code>optional bool owerwrite = 17;</code>
     */
    public boolean getOwerwrite() {
      return owerwrite_;
    }

    public static final int MODE_FIELD_NUMBER = 18;
    private int mode_;
    /**
     * <code>optional int32 mode = 18;</code>
     */
    public int getMode() {
      return mode_;
    }

    public static final int LENGTH_FIELD_NUMBER = 19;
    private int length_;
    /**
     * <code>optional int32 length = 19;</code>
     */
    public int getLength() {
      return length_;
    }

    public static final int FILEHANDLE_FIELD_NUMBER = 20;
    private volatile java.lang.Object fileHandle_;
    /**
     * <code>optional string fileHandle = 20;</code>
     */
    public java.lang.String getFileHandle() {
      java.lang.Object ref = fileHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileHandle_ = s;
        return s;
      }
    }
    /**
     * <code>optional string fileHandle = 20;</code>
     */
    public com.google.protobuf.ByteString
        getFileHandleBytes() {
      java.lang.Object ref = fileHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int READLENGTH_FIELD_NUMBER = 21;
    private int readLength_;
    /**
     * <code>optional int32 readLength = 21;</code>
     */
    public int getReadLength() {
      return readLength_;
    }

    public static final int WRITTENLENGTH_FIELD_NUMBER = 22;
    private int writtenLength_;
    /**
     * <code>optional int32 writtenLength = 22;</code>
     */
    public int getWrittenLength() {
      return writtenLength_;
    }

    public static final int TOTALLENGTH_FIELD_NUMBER = 23;
    private int totalLength_;
    /**
     * <code>optional int32 totalLength = 23;</code>
     */
    public int getTotalLength() {
      return totalLength_;
    }

    public static final int OFFSET_FIELD_NUMBER = 24;
    private int offset_;
    /**
     * <code>optional int32 offset = 24;</code>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int POSITION_FIELD_NUMBER = 25;
    private int position_;
    /**
     * <code>optional int32 position = 25;</code>
     */
    public int getPosition() {
      return position_;
    }

    public static final int ERROR_FIELD_NUMBER = 26;
    private int error_;
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
     */
    public int getErrorValue() {
      return error_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
     */
    public com.rtrk.atcommands.ATCommands.Error getError() {
      com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(error_);
      return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageType_ != com.rtrk.atcommands.ATCommands.FileMessageType.GET_STORAGE_DATE_SIZE.getNumber()) {
        output.writeEnum(1, messageType_);
      }
      if (!getNamePatternBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, namePattern_);
      }
      if (freeSize_ != 0) {
        output.writeInt32(3, freeSize_);
      }
      if (totalSize_ != 0) {
        output.writeInt32(4, totalSize_);
      }
      if (maxallocSize_ != 0) {
        output.writeInt32(5, maxallocSize_);
      }
      if (ufsFileSize_ != 0) {
        output.writeInt32(6, ufsFileSize_);
      }
      if (ufsFileNumber_ != 0) {
        output.writeInt32(7, ufsFileNumber_);
      }
      if (!getFileNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, fileName_);
      }
      if (fileSize_ != 0) {
        output.writeInt32(9, fileSize_);
      }
      if (ramSize_ != 0) {
        output.writeInt32(10, ramSize_);
      }
      if (uploadSize_ != 0) {
        output.writeInt32(11, uploadSize_);
      }
      if (timeout_ != 0) {
        output.writeInt32(12, timeout_);
      }
      if (ackMode_ != false) {
        output.writeBool(13, ackMode_);
      }
      if (!getSrcFileNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, srcFileName_);
      }
      if (!getDestFileNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, destFileName_);
      }
      if (copy_ != false) {
        output.writeBool(16, copy_);
      }
      if (owerwrite_ != false) {
        output.writeBool(17, owerwrite_);
      }
      if (mode_ != 0) {
        output.writeInt32(18, mode_);
      }
      if (length_ != 0) {
        output.writeInt32(19, length_);
      }
      if (!getFileHandleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, fileHandle_);
      }
      if (readLength_ != 0) {
        output.writeInt32(21, readLength_);
      }
      if (writtenLength_ != 0) {
        output.writeInt32(22, writtenLength_);
      }
      if (totalLength_ != 0) {
        output.writeInt32(23, totalLength_);
      }
      if (offset_ != 0) {
        output.writeInt32(24, offset_);
      }
      if (position_ != 0) {
        output.writeInt32(25, position_);
      }
      if (error_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        output.writeEnum(26, error_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageType_ != com.rtrk.atcommands.ATCommands.FileMessageType.GET_STORAGE_DATE_SIZE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (!getNamePatternBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, namePattern_);
      }
      if (freeSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, freeSize_);
      }
      if (totalSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalSize_);
      }
      if (maxallocSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxallocSize_);
      }
      if (ufsFileSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, ufsFileSize_);
      }
      if (ufsFileNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, ufsFileNumber_);
      }
      if (!getFileNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, fileName_);
      }
      if (fileSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, fileSize_);
      }
      if (ramSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, ramSize_);
      }
      if (uploadSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, uploadSize_);
      }
      if (timeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, timeout_);
      }
      if (ackMode_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, ackMode_);
      }
      if (!getSrcFileNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, srcFileName_);
      }
      if (!getDestFileNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, destFileName_);
      }
      if (copy_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, copy_);
      }
      if (owerwrite_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, owerwrite_);
      }
      if (mode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, mode_);
      }
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, length_);
      }
      if (!getFileHandleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, fileHandle_);
      }
      if (readLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, readLength_);
      }
      if (writtenLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, writtenLength_);
      }
      if (totalLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, totalLength_);
      }
      if (offset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, offset_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, position_);
      }
      if (error_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(26, error_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.rtrk.atcommands.ATCommands.FileCommand)) {
        return super.equals(obj);
      }
      com.rtrk.atcommands.ATCommands.FileCommand other = (com.rtrk.atcommands.ATCommands.FileCommand) obj;

      boolean result = true;
      result = result && messageType_ == other.messageType_;
      result = result && getNamePattern()
          .equals(other.getNamePattern());
      result = result && (getFreeSize()
          == other.getFreeSize());
      result = result && (getTotalSize()
          == other.getTotalSize());
      result = result && (getMaxallocSize()
          == other.getMaxallocSize());
      result = result && (getUfsFileSize()
          == other.getUfsFileSize());
      result = result && (getUfsFileNumber()
          == other.getUfsFileNumber());
      result = result && getFileName()
          .equals(other.getFileName());
      result = result && (getFileSize()
          == other.getFileSize());
      result = result && (getRamSize()
          == other.getRamSize());
      result = result && (getUploadSize()
          == other.getUploadSize());
      result = result && (getTimeout()
          == other.getTimeout());
      result = result && (getAckMode()
          == other.getAckMode());
      result = result && getSrcFileName()
          .equals(other.getSrcFileName());
      result = result && getDestFileName()
          .equals(other.getDestFileName());
      result = result && (getCopy()
          == other.getCopy());
      result = result && (getOwerwrite()
          == other.getOwerwrite());
      result = result && (getMode()
          == other.getMode());
      result = result && (getLength()
          == other.getLength());
      result = result && getFileHandle()
          .equals(other.getFileHandle());
      result = result && (getReadLength()
          == other.getReadLength());
      result = result && (getWrittenLength()
          == other.getWrittenLength());
      result = result && (getTotalLength()
          == other.getTotalLength());
      result = result && (getOffset()
          == other.getOffset());
      result = result && (getPosition()
          == other.getPosition());
      result = result && error_ == other.error_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + MESSAGETYPE_FIELD_NUMBER;
      hash = (53 * hash) + messageType_;
      hash = (37 * hash) + NAMEPATTERN_FIELD_NUMBER;
      hash = (53 * hash) + getNamePattern().hashCode();
      hash = (37 * hash) + FREESIZE_FIELD_NUMBER;
      hash = (53 * hash) + getFreeSize();
      hash = (37 * hash) + TOTALSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getTotalSize();
      hash = (37 * hash) + MAXALLOCSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxallocSize();
      hash = (37 * hash) + UFSFILESIZE_FIELD_NUMBER;
      hash = (53 * hash) + getUfsFileSize();
      hash = (37 * hash) + UFSFILENUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getUfsFileNumber();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + FILESIZE_FIELD_NUMBER;
      hash = (53 * hash) + getFileSize();
      hash = (37 * hash) + RAMSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getRamSize();
      hash = (37 * hash) + UPLOADSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getUploadSize();
      hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getTimeout();
      hash = (37 * hash) + ACKMODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAckMode());
      hash = (37 * hash) + SRCFILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getSrcFileName().hashCode();
      hash = (37 * hash) + DESTFILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getDestFileName().hashCode();
      hash = (37 * hash) + COPY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCopy());
      hash = (37 * hash) + OWERWRITE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOwerwrite());
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (37 * hash) + FILEHANDLE_FIELD_NUMBER;
      hash = (53 * hash) + getFileHandle().hashCode();
      hash = (37 * hash) + READLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getReadLength();
      hash = (37 * hash) + WRITTENLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getWrittenLength();
      hash = (37 * hash) + TOTALLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getTotalLength();
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getOffset();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + error_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.FileCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.rtrk.atcommands.ATCommands.FileCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.rtrk.protobuf.FileCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.rtrk.protobuf.FileCommand)
        com.rtrk.atcommands.ATCommands.FileCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FileCommand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FileCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rtrk.atcommands.ATCommands.FileCommand.class, com.rtrk.atcommands.ATCommands.FileCommand.Builder.class);
      }

      // Construct using com.rtrk.atcommands.ATCommands.FileCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        messageType_ = 0;

        namePattern_ = "";

        freeSize_ = 0;

        totalSize_ = 0;

        maxallocSize_ = 0;

        ufsFileSize_ = 0;

        ufsFileNumber_ = 0;

        fileName_ = "";

        fileSize_ = 0;

        ramSize_ = 0;

        uploadSize_ = 0;

        timeout_ = 0;

        ackMode_ = false;

        srcFileName_ = "";

        destFileName_ = "";

        copy_ = false;

        owerwrite_ = false;

        mode_ = 0;

        length_ = 0;

        fileHandle_ = "";

        readLength_ = 0;

        writtenLength_ = 0;

        totalLength_ = 0;

        offset_ = 0;

        position_ = 0;

        error_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FileCommand_descriptor;
      }

      public com.rtrk.atcommands.ATCommands.FileCommand getDefaultInstanceForType() {
        return com.rtrk.atcommands.ATCommands.FileCommand.getDefaultInstance();
      }

      public com.rtrk.atcommands.ATCommands.FileCommand build() {
        com.rtrk.atcommands.ATCommands.FileCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rtrk.atcommands.ATCommands.FileCommand buildPartial() {
        com.rtrk.atcommands.ATCommands.FileCommand result = new com.rtrk.atcommands.ATCommands.FileCommand(this);
        result.messageType_ = messageType_;
        result.namePattern_ = namePattern_;
        result.freeSize_ = freeSize_;
        result.totalSize_ = totalSize_;
        result.maxallocSize_ = maxallocSize_;
        result.ufsFileSize_ = ufsFileSize_;
        result.ufsFileNumber_ = ufsFileNumber_;
        result.fileName_ = fileName_;
        result.fileSize_ = fileSize_;
        result.ramSize_ = ramSize_;
        result.uploadSize_ = uploadSize_;
        result.timeout_ = timeout_;
        result.ackMode_ = ackMode_;
        result.srcFileName_ = srcFileName_;
        result.destFileName_ = destFileName_;
        result.copy_ = copy_;
        result.owerwrite_ = owerwrite_;
        result.mode_ = mode_;
        result.length_ = length_;
        result.fileHandle_ = fileHandle_;
        result.readLength_ = readLength_;
        result.writtenLength_ = writtenLength_;
        result.totalLength_ = totalLength_;
        result.offset_ = offset_;
        result.position_ = position_;
        result.error_ = error_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rtrk.atcommands.ATCommands.FileCommand) {
          return mergeFrom((com.rtrk.atcommands.ATCommands.FileCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rtrk.atcommands.ATCommands.FileCommand other) {
        if (other == com.rtrk.atcommands.ATCommands.FileCommand.getDefaultInstance()) return this;
        if (other.messageType_ != 0) {
          setMessageTypeValue(other.getMessageTypeValue());
        }
        if (!other.getNamePattern().isEmpty()) {
          namePattern_ = other.namePattern_;
          onChanged();
        }
        if (other.getFreeSize() != 0) {
          setFreeSize(other.getFreeSize());
        }
        if (other.getTotalSize() != 0) {
          setTotalSize(other.getTotalSize());
        }
        if (other.getMaxallocSize() != 0) {
          setMaxallocSize(other.getMaxallocSize());
        }
        if (other.getUfsFileSize() != 0) {
          setUfsFileSize(other.getUfsFileSize());
        }
        if (other.getUfsFileNumber() != 0) {
          setUfsFileNumber(other.getUfsFileNumber());
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.getFileSize() != 0) {
          setFileSize(other.getFileSize());
        }
        if (other.getRamSize() != 0) {
          setRamSize(other.getRamSize());
        }
        if (other.getUploadSize() != 0) {
          setUploadSize(other.getUploadSize());
        }
        if (other.getTimeout() != 0) {
          setTimeout(other.getTimeout());
        }
        if (other.getAckMode() != false) {
          setAckMode(other.getAckMode());
        }
        if (!other.getSrcFileName().isEmpty()) {
          srcFileName_ = other.srcFileName_;
          onChanged();
        }
        if (!other.getDestFileName().isEmpty()) {
          destFileName_ = other.destFileName_;
          onChanged();
        }
        if (other.getCopy() != false) {
          setCopy(other.getCopy());
        }
        if (other.getOwerwrite() != false) {
          setOwerwrite(other.getOwerwrite());
        }
        if (other.getMode() != 0) {
          setMode(other.getMode());
        }
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (!other.getFileHandle().isEmpty()) {
          fileHandle_ = other.fileHandle_;
          onChanged();
        }
        if (other.getReadLength() != 0) {
          setReadLength(other.getReadLength());
        }
        if (other.getWrittenLength() != 0) {
          setWrittenLength(other.getWrittenLength());
        }
        if (other.getTotalLength() != 0) {
          setTotalLength(other.getTotalLength());
        }
        if (other.getOffset() != 0) {
          setOffset(other.getOffset());
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (other.error_ != 0) {
          setErrorValue(other.getErrorValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rtrk.atcommands.ATCommands.FileCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rtrk.atcommands.ATCommands.FileCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int messageType_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
       */
      public int getMessageTypeValue() {
        return messageType_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
       */
      public Builder setMessageTypeValue(int value) {
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
       */
      public com.rtrk.atcommands.ATCommands.FileMessageType getMessageType() {
        com.rtrk.atcommands.ATCommands.FileMessageType result = com.rtrk.atcommands.ATCommands.FileMessageType.valueOf(messageType_);
        return result == null ? com.rtrk.atcommands.ATCommands.FileMessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
       */
      public Builder setMessageType(com.rtrk.atcommands.ATCommands.FileMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FileMessageType messageType = 1;</code>
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object namePattern_ = "";
      /**
       * <code>optional string namePattern = 2;</code>
       */
      public java.lang.String getNamePattern() {
        java.lang.Object ref = namePattern_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namePattern_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string namePattern = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNamePatternBytes() {
        java.lang.Object ref = namePattern_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namePattern_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string namePattern = 2;</code>
       */
      public Builder setNamePattern(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namePattern_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string namePattern = 2;</code>
       */
      public Builder clearNamePattern() {
        
        namePattern_ = getDefaultInstance().getNamePattern();
        onChanged();
        return this;
      }
      /**
       * <code>optional string namePattern = 2;</code>
       */
      public Builder setNamePatternBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namePattern_ = value;
        onChanged();
        return this;
      }

      private int freeSize_ ;
      /**
       * <code>optional int32 freeSize = 3;</code>
       */
      public int getFreeSize() {
        return freeSize_;
      }
      /**
       * <code>optional int32 freeSize = 3;</code>
       */
      public Builder setFreeSize(int value) {
        
        freeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 freeSize = 3;</code>
       */
      public Builder clearFreeSize() {
        
        freeSize_ = 0;
        onChanged();
        return this;
      }

      private int totalSize_ ;
      /**
       * <code>optional int32 totalSize = 4;</code>
       */
      public int getTotalSize() {
        return totalSize_;
      }
      /**
       * <code>optional int32 totalSize = 4;</code>
       */
      public Builder setTotalSize(int value) {
        
        totalSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalSize = 4;</code>
       */
      public Builder clearTotalSize() {
        
        totalSize_ = 0;
        onChanged();
        return this;
      }

      private int maxallocSize_ ;
      /**
       * <code>optional int32 maxallocSize = 5;</code>
       */
      public int getMaxallocSize() {
        return maxallocSize_;
      }
      /**
       * <code>optional int32 maxallocSize = 5;</code>
       */
      public Builder setMaxallocSize(int value) {
        
        maxallocSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxallocSize = 5;</code>
       */
      public Builder clearMaxallocSize() {
        
        maxallocSize_ = 0;
        onChanged();
        return this;
      }

      private int ufsFileSize_ ;
      /**
       * <code>optional int32 ufsFileSize = 6;</code>
       */
      public int getUfsFileSize() {
        return ufsFileSize_;
      }
      /**
       * <code>optional int32 ufsFileSize = 6;</code>
       */
      public Builder setUfsFileSize(int value) {
        
        ufsFileSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ufsFileSize = 6;</code>
       */
      public Builder clearUfsFileSize() {
        
        ufsFileSize_ = 0;
        onChanged();
        return this;
      }

      private int ufsFileNumber_ ;
      /**
       * <code>optional int32 ufsFileNumber = 7;</code>
       */
      public int getUfsFileNumber() {
        return ufsFileNumber_;
      }
      /**
       * <code>optional int32 ufsFileNumber = 7;</code>
       */
      public Builder setUfsFileNumber(int value) {
        
        ufsFileNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ufsFileNumber = 7;</code>
       */
      public Builder clearUfsFileNumber() {
        
        ufsFileNumber_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>optional string fileName = 8;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public Builder clearFileName() {
        
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 8;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fileName_ = value;
        onChanged();
        return this;
      }

      private int fileSize_ ;
      /**
       * <code>optional int32 fileSize = 9;</code>
       */
      public int getFileSize() {
        return fileSize_;
      }
      /**
       * <code>optional int32 fileSize = 9;</code>
       */
      public Builder setFileSize(int value) {
        
        fileSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fileSize = 9;</code>
       */
      public Builder clearFileSize() {
        
        fileSize_ = 0;
        onChanged();
        return this;
      }

      private int ramSize_ ;
      /**
       * <code>optional int32 ramSize = 10;</code>
       */
      public int getRamSize() {
        return ramSize_;
      }
      /**
       * <code>optional int32 ramSize = 10;</code>
       */
      public Builder setRamSize(int value) {
        
        ramSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ramSize = 10;</code>
       */
      public Builder clearRamSize() {
        
        ramSize_ = 0;
        onChanged();
        return this;
      }

      private int uploadSize_ ;
      /**
       * <code>optional int32 uploadSize = 11;</code>
       */
      public int getUploadSize() {
        return uploadSize_;
      }
      /**
       * <code>optional int32 uploadSize = 11;</code>
       */
      public Builder setUploadSize(int value) {
        
        uploadSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uploadSize = 11;</code>
       */
      public Builder clearUploadSize() {
        
        uploadSize_ = 0;
        onChanged();
        return this;
      }

      private int timeout_ ;
      /**
       * <code>optional int32 timeout = 12;</code>
       */
      public int getTimeout() {
        return timeout_;
      }
      /**
       * <code>optional int32 timeout = 12;</code>
       */
      public Builder setTimeout(int value) {
        
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeout = 12;</code>
       */
      public Builder clearTimeout() {
        
        timeout_ = 0;
        onChanged();
        return this;
      }

      private boolean ackMode_ ;
      /**
       * <code>optional bool ackMode = 13;</code>
       */
      public boolean getAckMode() {
        return ackMode_;
      }
      /**
       * <code>optional bool ackMode = 13;</code>
       */
      public Builder setAckMode(boolean value) {
        
        ackMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ackMode = 13;</code>
       */
      public Builder clearAckMode() {
        
        ackMode_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object srcFileName_ = "";
      /**
       * <code>optional string srcFileName = 14;</code>
       */
      public java.lang.String getSrcFileName() {
        java.lang.Object ref = srcFileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          srcFileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string srcFileName = 14;</code>
       */
      public com.google.protobuf.ByteString
          getSrcFileNameBytes() {
        java.lang.Object ref = srcFileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcFileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string srcFileName = 14;</code>
       */
      public Builder setSrcFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcFileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string srcFileName = 14;</code>
       */
      public Builder clearSrcFileName() {
        
        srcFileName_ = getDefaultInstance().getSrcFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string srcFileName = 14;</code>
       */
      public Builder setSrcFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        srcFileName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object destFileName_ = "";
      /**
       * <code>optional string destFileName = 15;</code>
       */
      public java.lang.String getDestFileName() {
        java.lang.Object ref = destFileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          destFileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string destFileName = 15;</code>
       */
      public com.google.protobuf.ByteString
          getDestFileNameBytes() {
        java.lang.Object ref = destFileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          destFileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string destFileName = 15;</code>
       */
      public Builder setDestFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        destFileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string destFileName = 15;</code>
       */
      public Builder clearDestFileName() {
        
        destFileName_ = getDefaultInstance().getDestFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string destFileName = 15;</code>
       */
      public Builder setDestFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        destFileName_ = value;
        onChanged();
        return this;
      }

      private boolean copy_ ;
      /**
       * <code>optional bool copy = 16;</code>
       */
      public boolean getCopy() {
        return copy_;
      }
      /**
       * <code>optional bool copy = 16;</code>
       */
      public Builder setCopy(boolean value) {
        
        copy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool copy = 16;</code>
       */
      public Builder clearCopy() {
        
        copy_ = false;
        onChanged();
        return this;
      }

      private boolean owerwrite_ ;
      /**
       * <code>optional bool owerwrite = 17;</code>
       */
      public boolean getOwerwrite() {
        return owerwrite_;
      }
      /**
       * <code>optional bool owerwrite = 17;</code>
       */
      public Builder setOwerwrite(boolean value) {
        
        owerwrite_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool owerwrite = 17;</code>
       */
      public Builder clearOwerwrite() {
        
        owerwrite_ = false;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>optional int32 mode = 18;</code>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional int32 mode = 18;</code>
       */
      public Builder setMode(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mode = 18;</code>
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <code>optional int32 length = 19;</code>
       */
      public int getLength() {
        return length_;
      }
      /**
       * <code>optional int32 length = 19;</code>
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 length = 19;</code>
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fileHandle_ = "";
      /**
       * <code>optional string fileHandle = 20;</code>
       */
      public java.lang.String getFileHandle() {
        java.lang.Object ref = fileHandle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fileHandle = 20;</code>
       */
      public com.google.protobuf.ByteString
          getFileHandleBytes() {
        java.lang.Object ref = fileHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fileHandle = 20;</code>
       */
      public Builder setFileHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fileHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileHandle = 20;</code>
       */
      public Builder clearFileHandle() {
        
        fileHandle_ = getDefaultInstance().getFileHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileHandle = 20;</code>
       */
      public Builder setFileHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fileHandle_ = value;
        onChanged();
        return this;
      }

      private int readLength_ ;
      /**
       * <code>optional int32 readLength = 21;</code>
       */
      public int getReadLength() {
        return readLength_;
      }
      /**
       * <code>optional int32 readLength = 21;</code>
       */
      public Builder setReadLength(int value) {
        
        readLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 readLength = 21;</code>
       */
      public Builder clearReadLength() {
        
        readLength_ = 0;
        onChanged();
        return this;
      }

      private int writtenLength_ ;
      /**
       * <code>optional int32 writtenLength = 22;</code>
       */
      public int getWrittenLength() {
        return writtenLength_;
      }
      /**
       * <code>optional int32 writtenLength = 22;</code>
       */
      public Builder setWrittenLength(int value) {
        
        writtenLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 writtenLength = 22;</code>
       */
      public Builder clearWrittenLength() {
        
        writtenLength_ = 0;
        onChanged();
        return this;
      }

      private int totalLength_ ;
      /**
       * <code>optional int32 totalLength = 23;</code>
       */
      public int getTotalLength() {
        return totalLength_;
      }
      /**
       * <code>optional int32 totalLength = 23;</code>
       */
      public Builder setTotalLength(int value) {
        
        totalLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalLength = 23;</code>
       */
      public Builder clearTotalLength() {
        
        totalLength_ = 0;
        onChanged();
        return this;
      }

      private int offset_ ;
      /**
       * <code>optional int32 offset = 24;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>optional int32 offset = 24;</code>
       */
      public Builder setOffset(int value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 offset = 24;</code>
       */
      public Builder clearOffset() {
        
        offset_ = 0;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <code>optional int32 position = 25;</code>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional int32 position = 25;</code>
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 position = 25;</code>
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private int error_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
       */
      public int getErrorValue() {
        return error_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
       */
      public Builder setErrorValue(int value) {
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
       */
      public com.rtrk.atcommands.ATCommands.Error getError() {
        com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(error_);
        return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
       */
      public Builder setError(com.rtrk.atcommands.ATCommands.Error value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        error_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 26;</code>
       */
      public Builder clearError() {
        
        error_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.rtrk.protobuf.FileCommand)
    }

    // @@protoc_insertion_point(class_scope:com.rtrk.protobuf.FileCommand)
    private static final com.rtrk.atcommands.ATCommands.FileCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.rtrk.atcommands.ATCommands.FileCommand();
    }

    public static com.rtrk.atcommands.ATCommands.FileCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FileCommand>
        PARSER = new com.google.protobuf.AbstractParser<FileCommand>() {
      public FileCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FileCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FileCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileCommand> getParserForType() {
      return PARSER;
    }

    public com.rtrk.atcommands.ATCommands.FileCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FTPCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.rtrk.protobuf.FTPCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
     */
    int getMessageTypeValue();
    /**
     * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
     */
    com.rtrk.atcommands.ATCommands.FTPMessageType getMessageType();

    /**
     * <code>optional string hostName = 2;</code>
     */
    java.lang.String getHostName();
    /**
     * <code>optional string hostName = 2;</code>
     */
    com.google.protobuf.ByteString
        getHostNameBytes();

    /**
     * <code>optional int32 port = 3;</code>
     */
    int getPort();

    /**
     * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
     */
    int getErrorValue();
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
     */
    com.rtrk.atcommands.ATCommands.Error getError();

    /**
     * <code>optional string fileName = 5;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string fileName = 5;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>optional int32 fileSize = 6;</code>
     */
    int getFileSize();

    /**
     * <code>optional int32 time = 7;</code>
     */
    int getTime();

    /**
     * <code>optional int32 upSize = 8;</code>
     */
    int getUpSize();

    /**
     * <code>optional int32 dwSize = 9;</code>
     */
    int getDwSize();

    /**
     * <code>optional string pathName = 10;</code>
     */
    java.lang.String getPathName();
    /**
     * <code>optional string pathName = 10;</code>
     */
    com.google.protobuf.ByteString
        getPathNameBytes();

    /**
     * <code>optional string userName = 11;</code>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string userName = 11;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    /**
     * <code>optional string password = 12;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 12;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional int32 type = 13;</code>
     */
    int getType();

    /**
     * <code>optional int32 value = 14;</code>
     */
    int getValue();

    /**
     * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
     */
    int getStatusValue();
    /**
     * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
     */
    com.rtrk.atcommands.ATCommands.FTPServiceStatus getStatus();

    /**
     * <code>optional int32 length = 16;</code>
     */
    int getLength();

    /**
     * <code>optional string sourceName = 17;</code>
     */
    java.lang.String getSourceName();
    /**
     * <code>optional string sourceName = 17;</code>
     */
    com.google.protobuf.ByteString
        getSourceNameBytes();

    /**
     * <code>optional string targetName = 18;</code>
     */
    java.lang.String getTargetName();
    /**
     * <code>optional string targetName = 18;</code>
     */
    com.google.protobuf.ByteString
        getTargetNameBytes();

    /**
     * <code>optional string name = 20;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 20;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 ret = 19;</code>
     */
    int getRet();

    /**
     * <code>optional string dirName = 21;</code>
     */
    java.lang.String getDirName();
    /**
     * <code>optional string dirName = 21;</code>
     */
    com.google.protobuf.ByteString
        getDirNameBytes();
  }
  /**
   * Protobuf type {@code com.rtrk.protobuf.FTPCommand}
   */
  public  static final class FTPCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.rtrk.protobuf.FTPCommand)
      FTPCommandOrBuilder {
    // Use FTPCommand.newBuilder() to construct.
    private FTPCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FTPCommand() {
      messageType_ = 0;
      hostName_ = "";
      port_ = 0;
      error_ = 0;
      fileName_ = "";
      fileSize_ = 0;
      time_ = 0;
      upSize_ = 0;
      dwSize_ = 0;
      pathName_ = "";
      userName_ = "";
      password_ = "";
      type_ = 0;
      value_ = 0;
      status_ = 0;
      length_ = 0;
      sourceName_ = "";
      targetName_ = "";
      name_ = "";
      ret_ = 0;
      dirName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FTPCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              messageType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              hostName_ = s;
              break;
            }
            case 24: {

              port_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              error_ = rawValue;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              fileName_ = s;
              break;
            }
            case 48: {

              fileSize_ = input.readInt32();
              break;
            }
            case 56: {

              time_ = input.readInt32();
              break;
            }
            case 64: {

              upSize_ = input.readInt32();
              break;
            }
            case 72: {

              dwSize_ = input.readInt32();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              pathName_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              userName_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            case 104: {

              type_ = input.readInt32();
              break;
            }
            case 112: {

              value_ = input.readInt32();
              break;
            }
            case 120: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 128: {

              length_ = input.readInt32();
              break;
            }
            case 138: {
              java.lang.String s = input.readStringRequireUtf8();

              sourceName_ = s;
              break;
            }
            case 146: {
              java.lang.String s = input.readStringRequireUtf8();

              targetName_ = s;
              break;
            }
            case 152: {

              ret_ = input.readInt32();
              break;
            }
            case 162: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 170: {
              java.lang.String s = input.readStringRequireUtf8();

              dirName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FTPCommand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FTPCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rtrk.atcommands.ATCommands.FTPCommand.class, com.rtrk.atcommands.ATCommands.FTPCommand.Builder.class);
    }

    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private int messageType_;
    /**
     * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
     */
    public int getMessageTypeValue() {
      return messageType_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
     */
    public com.rtrk.atcommands.ATCommands.FTPMessageType getMessageType() {
      com.rtrk.atcommands.ATCommands.FTPMessageType result = com.rtrk.atcommands.ATCommands.FTPMessageType.valueOf(messageType_);
      return result == null ? com.rtrk.atcommands.ATCommands.FTPMessageType.UNRECOGNIZED : result;
    }

    public static final int HOSTNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object hostName_;
    /**
     * <code>optional string hostName = 2;</code>
     */
    public java.lang.String getHostName() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string hostName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getHostNameBytes() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int ERROR_FIELD_NUMBER = 4;
    private int error_;
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
     */
    public int getErrorValue() {
      return error_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
     */
    public com.rtrk.atcommands.ATCommands.Error getError() {
      com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(error_);
      return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
    }

    public static final int FILENAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object fileName_;
    /**
     * <code>optional string fileName = 5;</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string fileName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILESIZE_FIELD_NUMBER = 6;
    private int fileSize_;
    /**
     * <code>optional int32 fileSize = 6;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }

    public static final int TIME_FIELD_NUMBER = 7;
    private int time_;
    /**
     * <code>optional int32 time = 7;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int UPSIZE_FIELD_NUMBER = 8;
    private int upSize_;
    /**
     * <code>optional int32 upSize = 8;</code>
     */
    public int getUpSize() {
      return upSize_;
    }

    public static final int DWSIZE_FIELD_NUMBER = 9;
    private int dwSize_;
    /**
     * <code>optional int32 dwSize = 9;</code>
     */
    public int getDwSize() {
      return dwSize_;
    }

    public static final int PATHNAME_FIELD_NUMBER = 10;
    private volatile java.lang.Object pathName_;
    /**
     * <code>optional string pathName = 10;</code>
     */
    public java.lang.String getPathName() {
      java.lang.Object ref = pathName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pathName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string pathName = 10;</code>
     */
    public com.google.protobuf.ByteString
        getPathNameBytes() {
      java.lang.Object ref = pathName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pathName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USERNAME_FIELD_NUMBER = 11;
    private volatile java.lang.Object userName_;
    /**
     * <code>optional string userName = 11;</code>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string userName = 11;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 12;
    private volatile java.lang.Object password_;
    /**
     * <code>optional string password = 12;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <code>optional string password = 12;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 13;
    private int type_;
    /**
     * <code>optional int32 type = 13;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int VALUE_FIELD_NUMBER = 14;
    private int value_;
    /**
     * <code>optional int32 value = 14;</code>
     */
    public int getValue() {
      return value_;
    }

    public static final int STATUS_FIELD_NUMBER = 15;
    private int status_;
    /**
     * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
     */
    public com.rtrk.atcommands.ATCommands.FTPServiceStatus getStatus() {
      com.rtrk.atcommands.ATCommands.FTPServiceStatus result = com.rtrk.atcommands.ATCommands.FTPServiceStatus.valueOf(status_);
      return result == null ? com.rtrk.atcommands.ATCommands.FTPServiceStatus.UNRECOGNIZED : result;
    }

    public static final int LENGTH_FIELD_NUMBER = 16;
    private int length_;
    /**
     * <code>optional int32 length = 16;</code>
     */
    public int getLength() {
      return length_;
    }

    public static final int SOURCENAME_FIELD_NUMBER = 17;
    private volatile java.lang.Object sourceName_;
    /**
     * <code>optional string sourceName = 17;</code>
     */
    public java.lang.String getSourceName() {
      java.lang.Object ref = sourceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourceName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string sourceName = 17;</code>
     */
    public com.google.protobuf.ByteString
        getSourceNameBytes() {
      java.lang.Object ref = sourceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGETNAME_FIELD_NUMBER = 18;
    private volatile java.lang.Object targetName_;
    /**
     * <code>optional string targetName = 18;</code>
     */
    public java.lang.String getTargetName() {
      java.lang.Object ref = targetName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string targetName = 18;</code>
     */
    public com.google.protobuf.ByteString
        getTargetNameBytes() {
      java.lang.Object ref = targetName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 20;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 20;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 20;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RET_FIELD_NUMBER = 19;
    private int ret_;
    /**
     * <code>optional int32 ret = 19;</code>
     */
    public int getRet() {
      return ret_;
    }

    public static final int DIRNAME_FIELD_NUMBER = 21;
    private volatile java.lang.Object dirName_;
    /**
     * <code>optional string dirName = 21;</code>
     */
    public java.lang.String getDirName() {
      java.lang.Object ref = dirName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dirName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string dirName = 21;</code>
     */
    public com.google.protobuf.ByteString
        getDirNameBytes() {
      java.lang.Object ref = dirName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dirName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageType_ != com.rtrk.atcommands.ATCommands.FTPMessageType.OPEN_AN_FTP_SERVICE_TO_THE_GIVEN_FTP_SERVER.getNumber()) {
        output.writeEnum(1, messageType_);
      }
      if (!getHostNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hostName_);
      }
      if (port_ != 0) {
        output.writeInt32(3, port_);
      }
      if (error_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        output.writeEnum(4, error_);
      }
      if (!getFileNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fileName_);
      }
      if (fileSize_ != 0) {
        output.writeInt32(6, fileSize_);
      }
      if (time_ != 0) {
        output.writeInt32(7, time_);
      }
      if (upSize_ != 0) {
        output.writeInt32(8, upSize_);
      }
      if (dwSize_ != 0) {
        output.writeInt32(9, dwSize_);
      }
      if (!getPathNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, pathName_);
      }
      if (!getUserNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, userName_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, password_);
      }
      if (type_ != 0) {
        output.writeInt32(13, type_);
      }
      if (value_ != 0) {
        output.writeInt32(14, value_);
      }
      if (status_ != com.rtrk.atcommands.ATCommands.FTPServiceStatus.IDLE.getNumber()) {
        output.writeEnum(15, status_);
      }
      if (length_ != 0) {
        output.writeInt32(16, length_);
      }
      if (!getSourceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, sourceName_);
      }
      if (!getTargetNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, targetName_);
      }
      if (ret_ != 0) {
        output.writeInt32(19, ret_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, name_);
      }
      if (!getDirNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, dirName_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageType_ != com.rtrk.atcommands.ATCommands.FTPMessageType.OPEN_AN_FTP_SERVICE_TO_THE_GIVEN_FTP_SERVER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (!getHostNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, hostName_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (error_ != com.rtrk.atcommands.ATCommands.Error.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, error_);
      }
      if (!getFileNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fileName_);
      }
      if (fileSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, fileSize_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, time_);
      }
      if (upSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, upSize_);
      }
      if (dwSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, dwSize_);
      }
      if (!getPathNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, pathName_);
      }
      if (!getUserNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, userName_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, password_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, type_);
      }
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, value_);
      }
      if (status_ != com.rtrk.atcommands.ATCommands.FTPServiceStatus.IDLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, status_);
      }
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, length_);
      }
      if (!getSourceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, sourceName_);
      }
      if (!getTargetNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, targetName_);
      }
      if (ret_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, ret_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, name_);
      }
      if (!getDirNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, dirName_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.rtrk.atcommands.ATCommands.FTPCommand)) {
        return super.equals(obj);
      }
      com.rtrk.atcommands.ATCommands.FTPCommand other = (com.rtrk.atcommands.ATCommands.FTPCommand) obj;

      boolean result = true;
      result = result && messageType_ == other.messageType_;
      result = result && getHostName()
          .equals(other.getHostName());
      result = result && (getPort()
          == other.getPort());
      result = result && error_ == other.error_;
      result = result && getFileName()
          .equals(other.getFileName());
      result = result && (getFileSize()
          == other.getFileSize());
      result = result && (getTime()
          == other.getTime());
      result = result && (getUpSize()
          == other.getUpSize());
      result = result && (getDwSize()
          == other.getDwSize());
      result = result && getPathName()
          .equals(other.getPathName());
      result = result && getUserName()
          .equals(other.getUserName());
      result = result && getPassword()
          .equals(other.getPassword());
      result = result && (getType()
          == other.getType());
      result = result && (getValue()
          == other.getValue());
      result = result && status_ == other.status_;
      result = result && (getLength()
          == other.getLength());
      result = result && getSourceName()
          .equals(other.getSourceName());
      result = result && getTargetName()
          .equals(other.getTargetName());
      result = result && getName()
          .equals(other.getName());
      result = result && (getRet()
          == other.getRet());
      result = result && getDirName()
          .equals(other.getDirName());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + MESSAGETYPE_FIELD_NUMBER;
      hash = (53 * hash) + messageType_;
      hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getHostName().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + error_;
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (37 * hash) + FILESIZE_FIELD_NUMBER;
      hash = (53 * hash) + getFileSize();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + UPSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getUpSize();
      hash = (37 * hash) + DWSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getDwSize();
      hash = (37 * hash) + PATHNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPathName().hashCode();
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUserName().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (37 * hash) + SOURCENAME_FIELD_NUMBER;
      hash = (53 * hash) + getSourceName().hashCode();
      hash = (37 * hash) + TARGETNAME_FIELD_NUMBER;
      hash = (53 * hash) + getTargetName().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + RET_FIELD_NUMBER;
      hash = (53 * hash) + getRet();
      hash = (37 * hash) + DIRNAME_FIELD_NUMBER;
      hash = (53 * hash) + getDirName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rtrk.atcommands.ATCommands.FTPCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.rtrk.atcommands.ATCommands.FTPCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.rtrk.protobuf.FTPCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.rtrk.protobuf.FTPCommand)
        com.rtrk.atcommands.ATCommands.FTPCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FTPCommand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FTPCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rtrk.atcommands.ATCommands.FTPCommand.class, com.rtrk.atcommands.ATCommands.FTPCommand.Builder.class);
      }

      // Construct using com.rtrk.atcommands.ATCommands.FTPCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        messageType_ = 0;

        hostName_ = "";

        port_ = 0;

        error_ = 0;

        fileName_ = "";

        fileSize_ = 0;

        time_ = 0;

        upSize_ = 0;

        dwSize_ = 0;

        pathName_ = "";

        userName_ = "";

        password_ = "";

        type_ = 0;

        value_ = 0;

        status_ = 0;

        length_ = 0;

        sourceName_ = "";

        targetName_ = "";

        name_ = "";

        ret_ = 0;

        dirName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rtrk.atcommands.ATCommands.internal_static_com_rtrk_protobuf_FTPCommand_descriptor;
      }

      public com.rtrk.atcommands.ATCommands.FTPCommand getDefaultInstanceForType() {
        return com.rtrk.atcommands.ATCommands.FTPCommand.getDefaultInstance();
      }

      public com.rtrk.atcommands.ATCommands.FTPCommand build() {
        com.rtrk.atcommands.ATCommands.FTPCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rtrk.atcommands.ATCommands.FTPCommand buildPartial() {
        com.rtrk.atcommands.ATCommands.FTPCommand result = new com.rtrk.atcommands.ATCommands.FTPCommand(this);
        result.messageType_ = messageType_;
        result.hostName_ = hostName_;
        result.port_ = port_;
        result.error_ = error_;
        result.fileName_ = fileName_;
        result.fileSize_ = fileSize_;
        result.time_ = time_;
        result.upSize_ = upSize_;
        result.dwSize_ = dwSize_;
        result.pathName_ = pathName_;
        result.userName_ = userName_;
        result.password_ = password_;
        result.type_ = type_;
        result.value_ = value_;
        result.status_ = status_;
        result.length_ = length_;
        result.sourceName_ = sourceName_;
        result.targetName_ = targetName_;
        result.name_ = name_;
        result.ret_ = ret_;
        result.dirName_ = dirName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rtrk.atcommands.ATCommands.FTPCommand) {
          return mergeFrom((com.rtrk.atcommands.ATCommands.FTPCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rtrk.atcommands.ATCommands.FTPCommand other) {
        if (other == com.rtrk.atcommands.ATCommands.FTPCommand.getDefaultInstance()) return this;
        if (other.messageType_ != 0) {
          setMessageTypeValue(other.getMessageTypeValue());
        }
        if (!other.getHostName().isEmpty()) {
          hostName_ = other.hostName_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.error_ != 0) {
          setErrorValue(other.getErrorValue());
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.getFileSize() != 0) {
          setFileSize(other.getFileSize());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getUpSize() != 0) {
          setUpSize(other.getUpSize());
        }
        if (other.getDwSize() != 0) {
          setDwSize(other.getDwSize());
        }
        if (!other.getPathName().isEmpty()) {
          pathName_ = other.pathName_;
          onChanged();
        }
        if (!other.getUserName().isEmpty()) {
          userName_ = other.userName_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (!other.getSourceName().isEmpty()) {
          sourceName_ = other.sourceName_;
          onChanged();
        }
        if (!other.getTargetName().isEmpty()) {
          targetName_ = other.targetName_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getRet() != 0) {
          setRet(other.getRet());
        }
        if (!other.getDirName().isEmpty()) {
          dirName_ = other.dirName_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rtrk.atcommands.ATCommands.FTPCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rtrk.atcommands.ATCommands.FTPCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int messageType_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
       */
      public int getMessageTypeValue() {
        return messageType_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
       */
      public Builder setMessageTypeValue(int value) {
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
       */
      public com.rtrk.atcommands.ATCommands.FTPMessageType getMessageType() {
        com.rtrk.atcommands.ATCommands.FTPMessageType result = com.rtrk.atcommands.ATCommands.FTPMessageType.valueOf(messageType_);
        return result == null ? com.rtrk.atcommands.ATCommands.FTPMessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
       */
      public Builder setMessageType(com.rtrk.atcommands.ATCommands.FTPMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPMessageType messageType = 1;</code>
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object hostName_ = "";
      /**
       * <code>optional string hostName = 2;</code>
       */
      public java.lang.String getHostName() {
        java.lang.Object ref = hostName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hostName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hostName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getHostNameBytes() {
        java.lang.Object ref = hostName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hostName = 2;</code>
       */
      public Builder setHostName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hostName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostName = 2;</code>
       */
      public Builder clearHostName() {
        
        hostName_ = getDefaultInstance().getHostName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostName = 2;</code>
       */
      public Builder setHostNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hostName_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <code>optional int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private int error_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
       */
      public int getErrorValue() {
        return error_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
       */
      public Builder setErrorValue(int value) {
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
       */
      public com.rtrk.atcommands.ATCommands.Error getError() {
        com.rtrk.atcommands.ATCommands.Error result = com.rtrk.atcommands.ATCommands.Error.valueOf(error_);
        return result == null ? com.rtrk.atcommands.ATCommands.Error.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
       */
      public Builder setError(com.rtrk.atcommands.ATCommands.Error value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        error_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.Error error = 4;</code>
       */
      public Builder clearError() {
        
        error_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>optional string fileName = 5;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fileName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fileName = 5;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 5;</code>
       */
      public Builder clearFileName() {
        
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fileName = 5;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fileName_ = value;
        onChanged();
        return this;
      }

      private int fileSize_ ;
      /**
       * <code>optional int32 fileSize = 6;</code>
       */
      public int getFileSize() {
        return fileSize_;
      }
      /**
       * <code>optional int32 fileSize = 6;</code>
       */
      public Builder setFileSize(int value) {
        
        fileSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fileSize = 6;</code>
       */
      public Builder clearFileSize() {
        
        fileSize_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>optional int32 time = 7;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional int32 time = 7;</code>
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 time = 7;</code>
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }

      private int upSize_ ;
      /**
       * <code>optional int32 upSize = 8;</code>
       */
      public int getUpSize() {
        return upSize_;
      }
      /**
       * <code>optional int32 upSize = 8;</code>
       */
      public Builder setUpSize(int value) {
        
        upSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 upSize = 8;</code>
       */
      public Builder clearUpSize() {
        
        upSize_ = 0;
        onChanged();
        return this;
      }

      private int dwSize_ ;
      /**
       * <code>optional int32 dwSize = 9;</code>
       */
      public int getDwSize() {
        return dwSize_;
      }
      /**
       * <code>optional int32 dwSize = 9;</code>
       */
      public Builder setDwSize(int value) {
        
        dwSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dwSize = 9;</code>
       */
      public Builder clearDwSize() {
        
        dwSize_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pathName_ = "";
      /**
       * <code>optional string pathName = 10;</code>
       */
      public java.lang.String getPathName() {
        java.lang.Object ref = pathName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pathName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pathName = 10;</code>
       */
      public com.google.protobuf.ByteString
          getPathNameBytes() {
        java.lang.Object ref = pathName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pathName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pathName = 10;</code>
       */
      public Builder setPathName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pathName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pathName = 10;</code>
       */
      public Builder clearPathName() {
        
        pathName_ = getDefaultInstance().getPathName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pathName = 10;</code>
       */
      public Builder setPathNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pathName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object userName_ = "";
      /**
       * <code>optional string userName = 11;</code>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userName = 11;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userName = 11;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userName = 11;</code>
       */
      public Builder clearUserName() {
        
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userName = 11;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 12;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 12;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 12;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 12;</code>
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 12;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional int32 type = 13;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 13;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 13;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional int32 value = 14;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 14;</code>
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 14;</code>
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
       */
      public com.rtrk.atcommands.ATCommands.FTPServiceStatus getStatus() {
        com.rtrk.atcommands.ATCommands.FTPServiceStatus result = com.rtrk.atcommands.ATCommands.FTPServiceStatus.valueOf(status_);
        return result == null ? com.rtrk.atcommands.ATCommands.FTPServiceStatus.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
       */
      public Builder setStatus(com.rtrk.atcommands.ATCommands.FTPServiceStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.rtrk.protobuf.FTPServiceStatus status = 15;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <code>optional int32 length = 16;</code>
       */
      public int getLength() {
        return length_;
      }
      /**
       * <code>optional int32 length = 16;</code>
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 length = 16;</code>
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sourceName_ = "";
      /**
       * <code>optional string sourceName = 17;</code>
       */
      public java.lang.String getSourceName() {
        java.lang.Object ref = sourceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sourceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sourceName = 17;</code>
       */
      public com.google.protobuf.ByteString
          getSourceNameBytes() {
        java.lang.Object ref = sourceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sourceName = 17;</code>
       */
      public Builder setSourceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sourceName = 17;</code>
       */
      public Builder clearSourceName() {
        
        sourceName_ = getDefaultInstance().getSourceName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sourceName = 17;</code>
       */
      public Builder setSourceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sourceName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object targetName_ = "";
      /**
       * <code>optional string targetName = 18;</code>
       */
      public java.lang.String getTargetName() {
        java.lang.Object ref = targetName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          targetName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string targetName = 18;</code>
       */
      public com.google.protobuf.ByteString
          getTargetNameBytes() {
        java.lang.Object ref = targetName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string targetName = 18;</code>
       */
      public Builder setTargetName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        targetName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string targetName = 18;</code>
       */
      public Builder clearTargetName() {
        
        targetName_ = getDefaultInstance().getTargetName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string targetName = 18;</code>
       */
      public Builder setTargetNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        targetName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 20;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 20;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 20;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 20;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 20;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int ret_ ;
      /**
       * <code>optional int32 ret = 19;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 19;</code>
       */
      public Builder setRet(int value) {
        
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 19;</code>
       */
      public Builder clearRet() {
        
        ret_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dirName_ = "";
      /**
       * <code>optional string dirName = 21;</code>
       */
      public java.lang.String getDirName() {
        java.lang.Object ref = dirName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dirName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dirName = 21;</code>
       */
      public com.google.protobuf.ByteString
          getDirNameBytes() {
        java.lang.Object ref = dirName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dirName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dirName = 21;</code>
       */
      public Builder setDirName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dirName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dirName = 21;</code>
       */
      public Builder clearDirName() {
        
        dirName_ = getDefaultInstance().getDirName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dirName = 21;</code>
       */
      public Builder setDirNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dirName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.rtrk.protobuf.FTPCommand)
    }

    // @@protoc_insertion_point(class_scope:com.rtrk.protobuf.FTPCommand)
    private static final com.rtrk.atcommands.ATCommands.FTPCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.rtrk.atcommands.ATCommands.FTPCommand();
    }

    public static com.rtrk.atcommands.ATCommands.FTPCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FTPCommand>
        PARSER = new com.google.protobuf.AbstractParser<FTPCommand>() {
      public FTPCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FTPCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FTPCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FTPCommand> getParserForType() {
      return PARSER;
    }

    public com.rtrk.atcommands.ATCommands.FTPCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rtrk_protobuf_HTTPCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_rtrk_protobuf_HTTPCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rtrk_protobuf_FileCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_rtrk_protobuf_FileCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rtrk_protobuf_FTPCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_rtrk_protobuf_FTPCommand_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016commands.proto\022\021com.rtrk.protobuf\"\337\002\n\013" +
      "HTTPCommand\0227\n\013messageType\030\001 \001(\0162\".com.r" +
      "trk.protobuf.HTTPMessageType\022\014\n\004test\030\002 \001" +
      "(\010\022\021\n\turlLength\030\003 \001(\005\022\021\n\tinputTime\030\004 \001(\005" +
      "\022\022\n\ntoReadTime\030\005 \001(\005\022\020\n\010waitTime\030\006 \001(\005\022\020" +
      "\n\010bodySize\030\007 \001(\005\022\020\n\010fileName\030\010 \001(\t\022\016\n\006le" +
      "ngth\030\t \001(\005\022\016\n\006dlSize\030\n \001(\005\022\025\n\rcontentLen" +
      "gth\030\013 \001(\005\022+\n\terrorcode\030\014 \001(\0162\030.com.rtrk." +
      "protobuf.Error\022\'\n\005error\030\r \001(\0162\030.com.rtrk" +
      ".protobuf.Error\022\014\n\004data\030\016 \001(\014\"\266\004\n\013FileCo",
      "mmand\0227\n\013messageType\030\001 \001(\0162\".com.rtrk.pr" +
      "otobuf.FileMessageType\022\023\n\013namePattern\030\002 " +
      "\001(\t\022\020\n\010freeSize\030\003 \001(\005\022\021\n\ttotalSize\030\004 \001(\005" +
      "\022\024\n\014maxallocSize\030\005 \001(\005\022\023\n\013ufsFileSize\030\006 " +
      "\001(\005\022\025\n\rufsFileNumber\030\007 \001(\005\022\020\n\010fileName\030\010" +
      " \001(\t\022\020\n\010fileSize\030\t \001(\005\022\017\n\007ramSize\030\n \001(\005\022" +
      "\022\n\nuploadSize\030\013 \001(\005\022\017\n\007timeout\030\014 \001(\005\022\017\n\007" +
      "ackMode\030\r \001(\010\022\023\n\013srcFileName\030\016 \001(\t\022\024\n\014de" +
      "stFileName\030\017 \001(\t\022\014\n\004copy\030\020 \001(\010\022\021\n\towerwr" +
      "ite\030\021 \001(\010\022\014\n\004mode\030\022 \001(\005\022\016\n\006length\030\023 \001(\005\022",
      "\022\n\nfileHandle\030\024 \001(\t\022\022\n\nreadLength\030\025 \001(\005\022" +
      "\025\n\rwrittenLength\030\026 \001(\005\022\023\n\013totalLength\030\027 " +
      "\001(\005\022\016\n\006offset\030\030 \001(\005\022\020\n\010position\030\031 \001(\005\022\'\n" +
      "\005error\030\032 \001(\0162\030.com.rtrk.protobuf.Error\"\313" +
      "\003\n\nFTPCommand\0226\n\013messageType\030\001 \001(\0162!.com" +
      ".rtrk.protobuf.FTPMessageType\022\020\n\010hostNam" +
      "e\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\022\'\n\005error\030\004 \001(\0162\030.c" +
      "om.rtrk.protobuf.Error\022\020\n\010fileName\030\005 \001(\t" +
      "\022\020\n\010fileSize\030\006 \001(\005\022\014\n\004time\030\007 \001(\005\022\016\n\006upSi" +
      "ze\030\010 \001(\005\022\016\n\006dwSize\030\t \001(\005\022\020\n\010pathName\030\n \001",
      "(\t\022\020\n\010userName\030\013 \001(\t\022\020\n\010password\030\014 \001(\t\022\014" +
      "\n\004type\030\r \001(\005\022\r\n\005value\030\016 \001(\005\0223\n\006status\030\017 " +
      "\001(\0162#.com.rtrk.protobuf.FTPServiceStatus" +
      "\022\016\n\006length\030\020 \001(\005\022\022\n\nsourceName\030\021 \001(\t\022\022\n\n" +
      "targetName\030\022 \001(\t\022\014\n\004name\030\024 \001(\t\022\013\n\003ret\030\023 " +
      "\001(\005\022\017\n\007dirName\030\025 \001(\t*i\n\020FTPServiceStatus" +
      "\022\010\n\004IDLE\020\000\022\013\n\007OPENING\020\001\022\n\n\006OPENED\020\002\022\013\n\007W" +
      "ORKING\020\003\022\014\n\010TRANSFER\020\004\022\013\n\007CLOSING\020\005\022\n\n\006C" +
      "LOSED\020\006*\305\006\n\016FTPMessageType\022/\n+OPEN_AN_FT" +
      "P_SERVICE_TO_THE_GIVEN_FTP_SERVER\020\000\022\031\n\025C",
      "LOSE_THE_FTP_SERVICE\020\001\022#\n\037UPLOAD_A_FILE_" +
      "TO_THE_FTP_SERVER\020\002\022=\n9SET_THE_PATH_IN_T" +
      "HE_FTP_SERVER_TO_UPLOAD_OR_DOWNLOAD_FILE" +
      "\020\003\0228\n4SET_THE_USER_NAME_OF_THE_ACCOUNT_T" +
      "O_OPEN_FTP_SERVICE\020\004\0227\n3SET_THE_PASSWORD" +
      "_OF_THE_ACCOUNT_TO_OPEN_FTP_SERVICE\020\005\0228\n" +
      "4SET_SOME_CONFIGURABLE_PARAMETERS_FOR_TH" +
      "E_FTP_SERVICE\020\006\022\037\n\033QUERY_STATUS_OF_FTP_S" +
      "ERVICE\020\007\0229\n5QUERY_THE_REAL_SIZE_TRANSFER" +
      "ED_IN_THE_LATEST_TRANSFER\020\010\0220\n,RENAME_FI",
      "LE_OR_FOLDER_NAME_ON_THE_FTP_SERVER\020\t\0226\n" +
      "2QUERY_THE_SIZE_OF_APPOINTED_FILE_ON_THE" +
      "_FTP_SERVER\020\n\022/\n+DELETE_THE_APPOINTED_FI" +
      "LE_ON_THE_FTP_SERVER\020\013\0220\n,ESTABLISH_A_NE" +
      "W_FILEFOLDER_ON_THE_FTP_SERVER\020\014\022)\n%REMO" +
      "VE_A_FILEFOLDER_ON_THE_FTP_SERVER\020\r\022D\n@L" +
      "IST_CONTENTS_OF_DIRECTORY_OR_FILE_INFORM" +
      "ATION_ON_THE_FTP_SERVER\020\016\022<\n8LIST_FILE_N" +
      "AMES_IN_THE_GIVEN_DIRECTORY_ON_THE_FTP_S" +
      "ERVER\020\017*\375\002\n\017FileMessageType\022\031\n\025GET_STORA",
      "GE_DATE_SIZE\020\000\022\016\n\nLIST_FILES\020\001\022\032\n\026UPLOAD" +
      "_FILE_TO_STORAGE\020\002\022\036\n\032DOWNLOAD_FILE_FROM" +
      "_STORAGE\020\003\022\032\n\026DELETE_FILE_IN_STORAGE\020\004\022\r" +
      "\n\tMOVE_FILE\020\005\022\r\n\tOPEN_FILE\020\006\022\r\n\tREAD_FIL" +
      "E\020\007\022\016\n\nWRITE_FILE\020\010\022\r\n\tSEEK_FILE\020\t\022\016\n\nCL" +
      "OSE_FILE\020\n\022\"\n\036GET_OFFSET_OF_THE_FILE_POI" +
      "NTER\020\013\0224\n0FORCE_TO_WRITE_DATA_REMAINING_" +
      "IN_THE_FILE_BUFFER\020\014\0221\n-TRUNCATE_THE_SPE" +
      "CIFIED_FILE_FROM_FILE_POINTER\020\r*\244\001\n\017HTTP" +
      "MessageType\022\027\n\023SET_HTTP_SERVER_URL\020\000\022\031\n\025",
      "SEND_HTTP_GET_REQUEST\020\001\022\035\n\031READ_HTTP_SER" +
      "VER_RESPONSE\020\002\022\032\n\026SEND_HTTP_POST_REQUEST" +
      "\020\003\022\"\n\036DOWNLODA_FILE_FROM_HTTP_SERVER\020\004*\374" +
      "\021\n\005Error\022\006\n\002OK\020\000\022\020\n\014UNKNOW_ERROR\020\001\022\024\n\020FT" +
      "P_SERVICE_BUSY\020\003\022\034\n\030FAILED_TO_GET_IP_ADD" +
      "RESS\020\004\022\021\n\rNETWORK_ERROR\020\005\022\026\n\022FTP_SESSION" +
      "_CLOSED\020\006\022(\n$DATA_CONNECTION_CLOSED_BY_F" +
      "TP_SERVER\020\007\022#\n\037GPRS_CSD_CONTEXT_IS_DEACT" +
      "IVATED\020\010\022\013\n\007TIMEOUT\020\t\022\033\n\027INPUT_PARAMETER" +
      "_ILLEGAL\020\n\022$\n FILE_NOT_FOUND_IN_LOCAL_PO",
      "SITION\020\013\022(\n$FAILED_TO_GET_FILE_IN_LOCAL_" +
      "POSITION\020\014\022\024\n\020NO_ENOUGH_MEMORY\020\r\022$\n\037FTP_" +
      "SERVER_CANT_SUPPORT_SERVICE\020\245\003\022#\n\036FAILDE" +
      "_TO_OPEN_DATA_CONNECTION\020\251\003\022/\n*THE_CONNE" +
      "CTION_IS_CLOSED_AND_STOP_TRANSFER\020\252\003\022\'\n\"" +
      "THE_REQUEST_FOR_FILE_ISNT_OPERATED\020\302\003\022)\n" +
      "$THE_FTP_SERVER_HAS_NOT_ENOUGH_MEMORY\020\304\003" +
      "\022+\n&THE_FORMAT_OF_THE_FTP_COMMAND_IS_WRO" +
      "NG\020\364\003\022,\n\'THE_PATTERN_OF_THE_FTP_COMMAND_" +
      "IS_WRONG\020\365\003\0220\n+THE_FTP_COMMAND_ISNT_OPER",
      "ATED_BY_FTP_SERVER\020\366\003\022\034\n\027NOT_LOGIN_TO_FT" +
      "P_SERVER\020\222\004\022\"\n\035NEEDED_INFORMATION_OF_ACC" +
      "OUNT\020\224\004\022 \n\033THE_REQUEST_IS_NOT_OPERATED\020\246" +
      "\004\022\033\n\026THE_REQUEST_IS_STOPPED\020\247\004\022%\n THE_RE" +
      "QUEST_OF_A_FILE_IS_STOPPED\020\250\004\022\031\n\024FILE_NA" +
      "ME_IS_ILLEGAL\020\251\004\022\022\n\rHTTP_TIME_OUT\020\331\035\022\016\n\t" +
      "HTTP_BUSY\020\332\035\022\023\n\016HTTP_UART_BUSY\020\333\035\022\030\n\023HTT" +
      "P_GET_NO_REQUEST\020\334\035\022\026\n\021HTTP_NETWORK_BUSY" +
      "\020\335\035\022\035\n\030HTTP_NETWORK_OPEN_FAILED\020\336\035\022\033\n\026HT" +
      "TP_NETWORK_NO_CONFIG\020\337\035\022\032\n\025HTTP_NETWORK_",
      "DEACTIVE\020\340\035\022\027\n\022HTTP_NETWORK_ERROR\020\341\035\022\023\n\016" +
      "HTTP_URL_ERROR\020\342\035\022\023\n\016HTTP_EMPTY_URL\020\343\035\022\027" +
      "\n\022HTTP_IP_ADDR_ERROR\020\344\035\022\023\n\016HTTP_DNS_ERRO" +
      "R\020\345\035\022\035\n\030HTTP_SOCKET_CREATE_ERROR\020\346\035\022\036\n\031H" +
      "TTP_SOCKET_CONNECT_ERROR\020\347\035\022\033\n\026HTTP_SOCK" +
      "ET_READ_ERROR\020\350\035\022\034\n\027HTTP_SOCKET_WRITE_ER" +
      "ROR\020\351\035\022\026\n\021HTTP_SOCKET_CLOSE\020\352\035\022\033\n\026HTTP_D" +
      "ATA_ENCODE_ERROR\020\353\035\022\033\n\026HTTP_DATA_DECODE_" +
      "ERROR\020\354\035\022\031\n\024HTTP_TO_READ_TIMEOUT\020\355\035\022\031\n\024H" +
      "TTP_RESPONSE_FAILED\020\356\035\022\027\n\022INCOMING_CALL_",
      "BUSY\020\357\035\022\024\n\017VOICE_CALL_BUSY\020\360\035\022\022\n\rINPUT_T" +
      "IMEOUT\020\361\035\022\026\n\021WAIT_DATA_TIMEOUT\020\362\035\022\037\n\032WAI" +
      "T_HTTP_RESPONSE_TIMEOUT\020\363\035\022\026\n\021ALLOC_MEMO" +
      "RY_FAIL\020\364\035\022\031\n\024HTTP_NEED_RELOCATION\020\365\035\022\030\n" +
      "\023INVALID_INPUT_VALUE\020\265\035\022\031\n\024NON_EXISTENT_" +
      "ADDRESS\020\313\036\022\025\n\020UFS_STORAGE_FULL\020\314\036\022\017\n\nDRI" +
      "VE_FULL\020\315\036\022\020\n\013DRIVE_ERROR\020\316\036\022\016\n\tNOT_FOUN" +
      "D\020\317\036\022\026\n\021INVALID_FILE_NAME\020\320\036\022\031\n\024FILE_ALR" +
      "EADY_EXISTED\020\321\036\022\032\n\025FAILED_TO_CREATE_FILE" +
      "\020\322\036\022\031\n\024FAILED_TO_WRITE_FILE\020\323\036\022\030\n\023FAILED",
      "_TO_OPEN_FILE\020\324\036\022\030\n\023FAILED_TO_READ_FILE\020" +
      "\325\036\022\026\n\021EXCEED_MAX_LENGTH\020\240\037\022\023\n\016OPEN_FILE_" +
      "FAIL\020\241\037\022\024\n\017WRITE_FILE_FAIL\020\242\037\022\022\n\rGET_SIZ" +
      "E_FAIL\020\243\037\022\016\n\tREAD_FAIL\020\244\037\022\023\n\016LIST_FILE_F" +
      "AIL\020\245\037\022\025\n\020DELETE_FILE_FAIL\020\246\037\022\027\n\022GET_DIS" +
      "C_INFO_FAIL\020\247\037\022\r\n\010NO_SPACE\020\250\037\022\r\n\010TIME_OU" +
      "T\020\251\037\022\030\n\023HTTP_FILE_NOT_FOUND\020\252\037\022\023\n\016FILE_T" +
      "OO_LARGE\020\253\037\022\027\n\022FILE_ALREADY_EXIST\020\254\037\022\026\n\021" +
      "INVALID_PARAMETER\020\255\037\022\021\n\014DRIVER_ERROR\020\256\037\022" +
      "\020\n\013CREATE_FAIL\020\257\037\022\022\n\rACCESS_DENIED\020\260\037\022\026\n",
      "\021FILE_IS_TOO_LARGE\020\261\037B!\n\023com.rtrk.atcomm" +
      "andsB\nATCommandsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_rtrk_protobuf_HTTPCommand_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_rtrk_protobuf_HTTPCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_rtrk_protobuf_HTTPCommand_descriptor,
        new java.lang.String[] { "MessageType", "Test", "UrlLength", "InputTime", "ToReadTime", "WaitTime", "BodySize", "FileName", "Length", "DlSize", "ContentLength", "Errorcode", "Error", "Data", });
    internal_static_com_rtrk_protobuf_FileCommand_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_rtrk_protobuf_FileCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_rtrk_protobuf_FileCommand_descriptor,
        new java.lang.String[] { "MessageType", "NamePattern", "FreeSize", "TotalSize", "MaxallocSize", "UfsFileSize", "UfsFileNumber", "FileName", "FileSize", "RamSize", "UploadSize", "Timeout", "AckMode", "SrcFileName", "DestFileName", "Copy", "Owerwrite", "Mode", "Length", "FileHandle", "ReadLength", "WrittenLength", "TotalLength", "Offset", "Position", "Error", });
    internal_static_com_rtrk_protobuf_FTPCommand_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_rtrk_protobuf_FTPCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_rtrk_protobuf_FTPCommand_descriptor,
        new java.lang.String[] { "MessageType", "HostName", "Port", "Error", "FileName", "FileSize", "Time", "UpSize", "DwSize", "PathName", "UserName", "Password", "Type", "Value", "Status", "Length", "SourceName", "TargetName", "Name", "Ret", "DirName", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
